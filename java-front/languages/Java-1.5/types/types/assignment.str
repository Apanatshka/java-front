module languages/Java-1.5/types/types/assignment

imports
	
	include/Java
	lib/task/-
	lib/types/-
	languages/Java-1.5/types/types/widening-primitive
	languages/Java-1.5/types/types/narrowing-primitive
	languages/Java-1.5/types/types/widening-reference
	
rules
	
	assignment-conversion(|ctx, e-ty):
		var-ty -> <task-create-choice(|ctx)> [prim-wide, ref-wide]
		with
		  prim-wide := <convert-widening-primitive(|ctx, e-ty)> var-ty
		; ref-wide  := <convert-widening-reference(|ctx, e-ty)> var-ty
		  // TODO: apply narrowing primitive conversion to constant expression if spec allows it (pg. 66)

	compound-assignment-conversion(|ctx, e-ty):
		var-ty -> <task-create-choice(|ctx)> [prim-wide, prim-narrow]
		with
			// pg 397. Compount assignment E1 op= E2 is equivalent to E1 = (T)((E1) op (E2)) where T is type of E1.
		  prim-wide   := <convert-widening-primitive(|ctx, e-ty)> var-ty
		; prim-narrow := <convert-narrowing-primitive(|ctx, e-ty)> var-ty
		  // TODO: apply narrowing primitive conversion to constant expression if spec allows it (pg. 66)
