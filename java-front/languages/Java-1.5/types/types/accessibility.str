module languages/Java-1.5/types/types/accessibility

imports
	
	include/Java
	lib/nabl/-
	lib/task/-
	lib/types/-
	lib/properties/-
	languages/Java-1.5/classes/names/classes
	languages/Java-1.5/interfaces/names/interfaces
	languages/Java-1.5/types/names/types
	languages/Java-1.5/packages/names/packages
	languages/Java-1.5/types/types/subtype
	
rules

	is-member-accessible(|ctx, ctx-uri):
		member -> <task-create-choice(|ctx)> [is-pub, prot-access, def-access, priv-access]
		where
		  mods := <prop-create-lookup(|ctx, Type())> member
		  
		  // Public members are always accessible
		; is-pub := <task-create-fetch(|ctx, mods)> Public()
		
		// Private members are only accessible within the same type.
	  ; is-priv            := <task-create-fetch(|ctx, mods)> Private()
	    // Same type
		; member-type-uri    := <nabl-create-suburi(|ctx, NablNsType())> member
		; enclosing-type-uri := <nabl-sub-uri(|NablNsType())> ctx-uri
		; same-type          := <task-create-eq(|ctx, member-type-uri)> enclosing-type-uri
		  // Private access
		; priv-access        := <task-create-sequence(|ctx)> [is-priv, same-type]
		
		// Default members are only visible within the same package
		; is-def := <task-create-fetch(|ctx, mods)> Default()
  		// Same package
  	; member-package-uri    := <nabl-create-suburi(|ctx, NablNsPackage())> member
  	; enclosing-package-uri := <nabl-create-suburi(|ctx, NablNsPackage())> ctx-uri
  	; same-package          := <task-create-eq(|ctx, member-package-uri)> enclosing-package-uri
			// Same default package
  	; member-dpackage-uri    := <nabl-create-suburi(|ctx, NablNsDefaultPackage())> member
  	; enclosing-dpackage-uri := <nabl-create-suburi(|ctx, NablNsDefaultPackage())> ctx-uri
  	; same-dpackage          := <task-create-eq(|ctx, member-dpackage-uri)> enclosing-dpackage-uri
  	  // Default access
  	; def-access := <task-create-sequence(|ctx)> [is-def, <task-create-choice(|ctx)> [same-package, same-dpackage]]
  	  
		// Protected members are accessible within the same package, and any subclass.
		; is-prot := <task-create-fetch(|ctx, mods)> Protected()
  	  // Subclass
		; member-ty            := <type-task(|ctx)> member
		; enclosing-ty-widened := <get-type; create-widening-lookup(|ctx)> enclosing-type-uri
	  ; widen                := <create-widening-match(|ctx, enclosing-ty-widened)> member-ty
	    // Protected access
	  ; prot-access := <task-create-sequence(|ctx)> [is-prot, <task-create-choice(|ctx)> [same-package, same-dpackage, widen]]
