module languages/Java-1.5/types/types/conversion

imports
	
	include/Java
	lib/task/-
	lib/types/-
	
signature
	
	constructors
		
		WideningPrimitiveConversion : Relation
	
rules // Identity conversion
	
	convert-identity(|ctx):
		(t1, t2) -> <type-match(|ctx, t1)> t2

rules // Widening primitive conversions
	
	convert-widening-primitive(|ctx):
		(t1, t2) -> <type-match(|ctx, WideningPrimitiveConversion(), t1)> t2
	
	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Byte(), t@Short() )) -> t
	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Byte(), t@Int()   )) -> t
	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Byte(), t@Long()  )) -> t
	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Byte(), t@Float() )) -> t
	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Byte(), t@Double())) -> t

	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Short(), t@Int()   )) -> t
	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Short(), t@Long()  )) -> t
	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Short(), t@Float() )) -> t
	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Short(), t@Double())) -> t
	
	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Char(), t@Int()   )) -> t
	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Char(), t@Long()  )) -> t
	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Char(), t@Float() )) -> t
	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Char(), t@Double())) -> t
	
	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Int(), t@Long()  )) -> t
	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Int(), t@Float() )) -> t
	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Int(), t@Double())) -> t
	
	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Long(), t@Float() )) -> t
	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Long(), t@Double())) -> t
	
	nabl-property-eq: (Type(), WideningPrimitiveConversion(), (Float(), t@Double() )) -> t
