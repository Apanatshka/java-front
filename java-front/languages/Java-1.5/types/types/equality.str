module languages/Java-1.5/types/types/equality

imports
	
	include/Java
	lib/task/-
	lib/properties/-
	lib/types/-

rules // Primitive types
	
	nabl-property-eq = ?(Type(), Eq(), (p1, p2)); <?p1> p2; !p1 // Match ignores annotations.
	
	is-boolean(|ctx) = type-match(|ctx, Boolean())
	is-byte(|ctx)    = type-match(|ctx, Byte())
	is-short(|ctx)   = type-match(|ctx, Short())
	is-char(|ctx)    = type-match(|ctx, Char())
	is-int(|ctx)     = type-match(|ctx, Int())
	is-long(|ctx)    = type-match(|ctx, Long())
	is-float(|ctx)   = type-match(|ctx, Float())
	is-double(|ctx)  = type-match(|ctx, Double())
	
	is-integral(|ctx):
		t -> <task-create-choice(|ctx)> [<is-byte(|ctx)> t, <is-short(|ctx)> t, <is-int(|ctx)> t, <is-long(|ctx)> t]
		
	is-decimal(|ctx):
		t -> <task-create-choice(|ctx)> [<is-float(|ctx)> t, <is-double(|ctx)> t]
		
	is-numerical(|ctx):
		t -> <task-create-choice(|ctx)> [<is-integral(|ctx)> t, <is-decimal(|ctx)> t]

signature // Reference types

	constructors
		
		IsClassType            : Relation
		IsInterfaceType        : Relation
		IsClassOrInterfaceType : Relation
		IsArrayType            : Relation
	
rules
	
	task-rewrite:
		(IsClassType(), c@ClassType(_, _)) -> c 
	
	task-rewrite:
		(IsInterfaceType(), i@InterfaceType(_, _)) -> i
		
	task-rewrite:
		(IsClassOrInterfaceType(), ci@ClassOrInterfaceType(_, _)) -> ci
	task-rewrite:
		(IsClassOrInterfaceType(), c@ClassType(_, _)) -> c
	task-rewrite:
		(IsClassOrInterfaceType(), i@InterfaceType(_, _)) -> i
	
	task-rewrite:
		(IsArrayType(), a@ArrayType(_)) -> a

rules
	
	is-class(|ctx):
		t -> <task-create-rewrite(|ctx, IsClassType())> t
	
	is-interface(|ctx):
		t -> <task-create-rewrite(|ctx, IsInterfaceType())> t
	
	is-classorinterface(|ctx):
		t -> <task-create-rewrite(|ctx, IsClassOrInterfaceType())> t
	
	is-array(|ctx):
		t -> <task-create-rewrite(|ctx, IsArrayType())> t
	
	is-reference(|ctx):
		t -> <task-create-choice(|ctx)> [<is-classorinterface(|ctx)> t, <is-array(|ctx)> t]
		