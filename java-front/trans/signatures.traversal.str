module signatures.traversal

imports
  
  signatures
  lib/nabl/-
  lib/properties/-
  lib/editor/-

rules // Built-ins
  
  spectrav-match-defaults(sibling-uris, implicits-up, uris-up, child-uris-up, state-up|uri*) =
    match(sibling-uris|uri*)
  ; match(implicits-up|[])
  ; match(uris-up|uri*)
  ; match(child-uris-up|uri*)
  ; match(state-up|[])
          
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Int(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Int(sibling-uris|lang, partition, unique*, uri*) = where(is-int); match(sibling-uris|uri*)
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-String(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-String(sibling-uris|lang, partition, unique*, uri*) = where(is-string); match(sibling-uris|uri*)

rules // Sibling list traversals
	
	specific-siblings-list-OptTypeArgs0(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-OptTypeArgs0(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-OptTypeArgs0(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-OptTypeArgs0(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-OptTypeArgs0(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-OptTypeArgs0(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Anno_ClassMod0(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Anno_ClassMod0(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Anno_ClassMod0(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Anno_ClassMod0(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Anno_ClassMod0(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Anno_ClassMod0(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Anno_InterfaceMod0(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Anno_InterfaceMod0(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Anno_InterfaceMod0(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Anno_InterfaceMod0(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Anno_InterfaceMod0(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Anno_InterfaceMod0(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Anno_AbstractMethodMod0(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Anno_AbstractMethodMod0(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Anno_AbstractMethodMod0(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Anno_AbstractMethodMod0(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Anno_AbstractMethodMod0(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Anno_AbstractMethodMod0(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Anno_ConstantMod0(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Anno_ConstantMod0(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Anno_ConstantMod0(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Anno_ConstantMod0(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Anno_ConstantMod0(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Anno_ConstantMod0(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Anno_ConstrMod0(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Anno_ConstrMod0(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Anno_ConstrMod0(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Anno_ConstrMod0(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Anno_ConstrMod0(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Anno_ConstrMod0(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Anno_VarMod0(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Anno_VarMod0(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Anno_VarMod0(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Anno_VarMod0(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Anno_VarMod0(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Anno_VarMod0(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Anno_MethodMod0(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Anno_MethodMod0(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Anno_MethodMod0(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Anno_MethodMod0(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Anno_MethodMod0(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Anno_MethodMod0(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Anno_FieldMod0(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Anno_FieldMod0(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Anno_FieldMod0(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Anno_FieldMod0(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Anno_FieldMod0(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Anno_FieldMod0(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Files(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Files(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Files(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Files(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Files(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Files(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-File(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-File(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-File(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-File(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-File(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-File(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-TypeDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-TypeDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-TypeDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-TypeDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-TypeDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-TypeDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ImportDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ImportDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ImportDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ImportDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ImportDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ImportDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-LHS(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-LHS(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-LHS(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-LHS(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-LHS(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-LHS(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-CondMid(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-CondMid(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-CondMid(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-CondMid(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-CondMid(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-CondMid(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Type(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Type(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Type(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Type(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Type(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Type(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-FloatType(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-FloatType(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-FloatType(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-FloatType(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-FloatType(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-FloatType(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-IntType(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-IntType(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-IntType(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-IntType(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-IntType(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-IntType(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-NumType(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-NumType(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-NumType(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-NumType(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-NumType(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-NumType(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-PrimType(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-PrimType(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-PrimType(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-PrimType(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-PrimType(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-PrimType(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-MethodSpec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-MethodSpec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-MethodSpec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-MethodSpec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-MethodSpec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-MethodSpec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-MethodArgs(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-MethodArgs(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-MethodArgs(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-MethodArgs(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-MethodArgs(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-MethodArgs(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ArraySubscript(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ArraySubscript(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ArraySubscript(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ArraySubscript(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ArraySubscript(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ArraySubscript(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ArrayAccess(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ArrayAccess(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ArrayAccess(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ArrayAccess(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ArrayAccess(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ArrayAccess(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-FieldAccess(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-FieldAccess(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-FieldAccess(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-FieldAccess(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-FieldAccess(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-FieldAccess(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-DimExpr(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-DimExpr(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-DimExpr(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-DimExpr(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-DimExpr(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-DimExpr(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ArrayBaseType(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ArrayBaseType(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ArrayBaseType(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ArrayBaseType(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ArrayBaseType(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ArrayBaseType(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ArrayCreationExpr(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ArrayCreationExpr(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ArrayCreationExpr(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ArrayCreationExpr(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ArrayCreationExpr(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ArrayCreationExpr(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ClassMemberDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ClassMemberDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ClassMemberDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ClassMemberDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ClassMemberDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ClassMemberDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ClassBodyDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ClassBodyDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ClassBodyDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ClassBodyDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ClassBodyDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ClassBodyDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Super(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Super(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Super(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Super(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Super(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Super(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ClassMod(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ClassMod(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ClassMod(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ClassMod(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ClassMod(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ClassMod(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ClassBody(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ClassBody(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ClassBody(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ClassBody(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ClassBody(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ClassBody(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-InterfaceMod(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-InterfaceMod(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-InterfaceMod(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-InterfaceMod(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-InterfaceMod(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-InterfaceMod(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-InterfaceMemberDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-InterfaceMemberDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-InterfaceMemberDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-InterfaceMemberDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-InterfaceMemberDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-InterfaceMemberDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-DefaultVal(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-DefaultVal(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-DefaultVal(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-DefaultVal(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-DefaultVal(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-DefaultVal(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-AnnoElemDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-AnnoElemDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-AnnoElemDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-AnnoElemDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-AnnoElemDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-AnnoElemDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-AnnoDecHead(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-AnnoDecHead(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-AnnoDecHead(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-AnnoDecHead(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-AnnoDecHead(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-AnnoDecHead(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-AnnoDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-AnnoDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-AnnoDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-AnnoDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-AnnoDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-AnnoDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-AbstractMethodMod(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-AbstractMethodMod(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-AbstractMethodMod(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-AbstractMethodMod(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-AbstractMethodMod(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-AbstractMethodMod(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-AbstractMethodDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-AbstractMethodDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-AbstractMethodDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-AbstractMethodDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-AbstractMethodDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-AbstractMethodDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ConstantMod(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ConstantMod(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ConstantMod(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ConstantMod(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ConstantMod(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ConstantMod(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-EnumBodyDecs(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-EnumBodyDecs(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-EnumBodyDecs(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-EnumBodyDecs(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-EnumBodyDecs(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-EnumBodyDecs(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-EnumConstArgs(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-EnumConstArgs(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-EnumConstArgs(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-EnumConstArgs(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-EnumConstArgs(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-EnumConstArgs(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-EnumConst(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-EnumConst(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-EnumConst(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-EnumConst(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-EnumConst(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-EnumConst(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-EnumBody(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-EnumBody(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-EnumBody(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-EnumBody(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-EnumBody(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-EnumBody(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-EnumDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-EnumDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-EnumDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-EnumDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-EnumDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-EnumDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ConstrMod(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ConstrMod(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ConstrMod(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ConstrMod(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ConstrMod(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ConstrMod(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ConstrInv(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ConstrInv(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ConstrInv(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ConstrInv(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ConstrInv(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ConstrInv(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-StaticInit(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-StaticInit(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-StaticInit(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-StaticInit(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-StaticInit(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-StaticInit(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-InstanceInit(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-InstanceInit(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-InstanceInit(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-InstanceInit(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-InstanceInit(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-InstanceInit(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-MethodBody(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-MethodBody(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-MethodBody(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-MethodBody(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-MethodBody(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-MethodBody(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ExceptionType(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ExceptionType(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ExceptionType(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ExceptionType(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ExceptionType(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ExceptionType(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Throws(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Throws(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Throws(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Throws(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Throws(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Throws(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-MethodMod(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-MethodMod(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-MethodMod(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-MethodMod(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-VarMod(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-VarMod(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-VarMod(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-VarMod(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-VarMod(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-VarMod(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ResultType(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ResultType(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ResultType(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ResultType(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ResultType(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ResultType(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-MethodParams(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-MethodParams(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-MethodParams(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-MethodParams(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-MethodParams(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-MethodParams(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Block(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Block(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Block(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Block(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Block(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Block(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-CatchClause(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-CatchClause(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-CatchClause(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-CatchClause(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-CatchClause(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-CatchClause(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-SwitchLabel(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-SwitchLabel(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-SwitchLabel(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-SwitchLabel(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-SwitchLabel(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-SwitchLabel(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-SwitchGroup(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-SwitchGroup(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-SwitchGroup(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-SwitchGroup(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-SwitchGroup(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-SwitchGroup(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-SwitchBlock(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-SwitchBlock(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-SwitchBlock(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-SwitchBlock(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-SwitchBlock(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-SwitchBlock(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-FieldMod(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-FieldMod(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-FieldMod(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-FieldMod(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-FieldMod(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-FieldMod(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-VarInit(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-VarInit(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-VarInit(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-VarInit(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-VarInit(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-VarInit(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Dim(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Dim(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Dim(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Dim(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Dim(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Dim(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-VarDecId(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-VarDecId(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-VarDecId(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-VarDecId(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-VarDecId(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-VarDecId(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-VarDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-VarDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-VarDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-VarDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-VarDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-VarDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ArrayInit(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ArrayInit(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ArrayInit(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ArrayInit(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ArrayInit(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ArrayInit(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ElemVal(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ElemVal(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ElemVal(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ElemVal(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ElemVal(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ElemVal(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ElemValPair(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ElemValPair(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ElemValPair(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ElemValPair(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ElemValPair(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ElemValPair(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Anno(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Anno(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Anno(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Anno(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Anno(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Anno(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ArrayType(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ArrayType(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ArrayType(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ArrayType(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ArrayType(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ArrayType(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-TypeDecSpec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-TypeDecSpec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-TypeDecSpec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-TypeDecSpec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-TypeDecSpec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-TypeDecSpec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-InterfaceType(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-InterfaceType(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-InterfaceType(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-InterfaceType(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-InterfaceType(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-InterfaceType(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ClassType(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ClassType(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ClassType(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ClassType(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ClassType(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ClassType(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ClassOrInterfaceType(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ClassOrInterfaceType(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ClassOrInterfaceType(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ClassOrInterfaceType(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ClassOrInterfaceType(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ClassOrInterfaceType(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-RefType(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-RefType(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-RefType(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-RefType(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-RefType(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-RefType(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-TypeVarId(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-TypeVarId(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-TypeVarId(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-TypeVarId(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-TypeVarId(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-TypeVarId(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-TypeParams(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-TypeParams(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-TypeParams(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-TypeParams(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-TypeParams(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-TypeParams(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-TypeBound(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-TypeBound(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-TypeBound(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-TypeBound(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-TypeBound(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-TypeBound(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-TypeParam(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-TypeParam(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-TypeParam(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-TypeParam(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-TypeParam(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-TypeParam(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-WildcardBound(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-WildcardBound(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-WildcardBound(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-WildcardBound(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-WildcardBound(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-WildcardBound(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ActualTypeArg(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ActualTypeArg(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ActualTypeArg(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ActualTypeArg(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ActualTypeArg(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ActualTypeArg(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-TypeArgs(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-TypeArgs(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-TypeArgs(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-TypeArgs(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-TypeArgs(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-TypeArgs(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ClassLiteral(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ClassLiteral(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ClassLiteral(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ClassLiteral(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ClassLiteral(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ClassLiteral(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Literal(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Literal(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Literal(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Literal(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Literal(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Literal(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-MethodName(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-MethodName(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-MethodName(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-MethodName(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-MethodName(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-MethodName(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ExprName(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ExprName(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ExprName(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ExprName(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ExprName(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ExprName(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-TypeName(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-TypeName(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-TypeName(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-TypeName(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-TypeName(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-TypeName(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-AmbName(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-AmbName(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-AmbName(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-AmbName(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-AmbName(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-AmbName(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-NullLiteral(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-NullLiteral(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-NullLiteral(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-NullLiteral(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-NullLiteral(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-NullLiteral(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-StringChars(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-StringChars(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-StringChars(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-StringChars(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-StringChars(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-StringChars(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-StringPart(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-StringPart(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-StringPart(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-StringPart(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-StringPart(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-StringPart(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-StringLiteral(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-StringLiteral(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-StringLiteral(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-StringLiteral(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-StringLiteral(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-StringLiteral(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-SingleChar(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-SingleChar(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-SingleChar(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-SingleChar(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-SingleChar(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-SingleChar(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-CharContent(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-CharContent(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-CharContent(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-CharContent(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-CharContent(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-CharContent(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-CharLiteral(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-CharLiteral(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-CharLiteral(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-CharLiteral(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-CharLiteral(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-CharLiteral(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-LastOcta(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-LastOcta(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-LastOcta(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-LastOcta(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-LastOcta(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-LastOcta(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-OctaEscape(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-OctaEscape(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-OctaEscape(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-OctaEscape(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-OctaEscape(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-OctaEscape(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-NamedEscape(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-NamedEscape(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-NamedEscape(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-NamedEscape(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-NamedEscape(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-NamedEscape(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-EscapeSeq(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-EscapeSeq(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-EscapeSeq(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-EscapeSeq(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-EscapeSeq(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-EscapeSeq(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Bool(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Bool(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Bool(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Bool(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Bool(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Bool(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-BoolLiteral(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-BoolLiteral(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-BoolLiteral(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-BoolLiteral(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-BoolLiteral(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-BoolLiteral(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-FloatLiteral(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-FloatLiteral(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-FloatLiteral(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-FloatLiteral(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-FloatLiteral(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-FloatLiteral(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-HexaDoubleLiteral(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-HexaDoubleLiteral(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-HexaDoubleLiteral(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-HexaDoubleLiteral(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-HexaDoubleLiteral(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-HexaDoubleLiteral(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-DeciDoubleLiteral(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-DeciDoubleLiteral(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-DeciDoubleLiteral(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-DeciDoubleLiteral(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-DeciDoubleLiteral(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-DeciDoubleLiteral(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-HexaFloatLiteral(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-HexaFloatLiteral(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-HexaFloatLiteral(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-HexaFloatLiteral(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-HexaFloatLiteral(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-HexaFloatLiteral(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-DeciFloatLiteral(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-DeciFloatLiteral(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-DeciFloatLiteral(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-DeciFloatLiteral(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-DeciFloatLiteral(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-DeciFloatLiteral(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-IntLiteral(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-IntLiteral(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-IntLiteral(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-IntLiteral(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-IntLiteral(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-IntLiteral(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-OctaLiteral(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-OctaLiteral(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-OctaLiteral(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-OctaLiteral(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-OctaLiteral(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-OctaLiteral(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-HexaLiteral(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-HexaLiteral(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-HexaLiteral(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-HexaLiteral(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-HexaLiteral(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-HexaLiteral(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-DeciLiteral(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-DeciLiteral(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-DeciLiteral(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-DeciLiteral(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-DeciLiteral(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-DeciLiteral(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-StrictFP(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-StrictFP(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-StrictFP(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-StrictFP(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-StrictFP(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-StrictFP(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Synchronized(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Synchronized(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Synchronized(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Synchronized(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Synchronized(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Synchronized(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Volatile(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Volatile(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Volatile(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Volatile(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Volatile(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Volatile(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Transient(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Transient(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Transient(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Transient(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Transient(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Transient(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Native(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Native(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Native(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Native(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Native(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Native(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Static(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Static(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Static(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Static(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Static(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Static(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Final(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Final(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Final(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Final(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Final(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Final(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Abstract(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Abstract(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Abstract(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Abstract(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Abstract(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Abstract(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Protected(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Protected(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Protected(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Protected(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Protected(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Protected(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Private(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Private(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Private(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Private(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Private(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Private(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Public(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Public(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Public(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Public(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Public(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Public(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Access(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Access(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Access(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Access(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Access(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Access(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Context(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Context(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Context(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Context(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Context(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Context(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ClassDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ClassDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ClassDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ClassDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ClassDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ClassDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ImplementsDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ImplementsDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ImplementsDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ImplementsDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ImplementsDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ImplementsDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-FieldDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-FieldDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-FieldDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-FieldDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-FieldDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-FieldDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-MethodDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-MethodDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-MethodDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-MethodDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-MethodDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-MethodDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ConstrDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ConstrDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ConstrDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ConstrDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ConstrDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ConstrDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ConstrBody(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ConstrBody(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ConstrBody(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ConstrBody(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ConstrBody(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ConstrBody(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-InterfaceDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-InterfaceDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-InterfaceDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-InterfaceDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-InterfaceDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-InterfaceDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ExtendsInterface(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ExtendsInterface(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ExtendsInterface(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ExtendsInterface(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ExtendsInterface(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ExtendsInterface(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ConstantDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ConstantDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ConstantDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ConstantDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ConstantDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ConstantDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-CompilationUnit(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-CompilationUnit(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-CompilationUnit(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-CompilationUnit(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-CompilationUnit(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-CompilationUnit(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-PackageDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-PackageDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-PackageDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-PackageDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-PackageDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-PackageDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-PackageName(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-PackageName(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-PackageName(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-PackageName(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-PackageName(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-PackageName(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-ID(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-ID(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-ID(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-ID(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-ID(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-ID(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-PackageOrTypeName(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-PackageOrTypeName(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-PackageOrTypeName(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-PackageOrTypeName(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-PackageOrTypeName(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-PackageOrTypeName(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-BlockStm(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-BlockStm(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-BlockStm(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-BlockStm(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-BlockStm(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-BlockStm(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Stm(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Stm(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Stm(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Stm(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-Expr(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-Expr(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-Expr(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-Expr(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-LocalVarDec(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-LocalVarDec(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-LocalVarDec(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-LocalVarDec(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-LocalVarDec(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-LocalVarDec(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-FormalParam(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-FormalParam(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-FormalParam(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-FormalParam(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-FormalParam(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-FormalParam(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-EnumDecHead(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-EnumDecHead(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-EnumDecHead(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-EnumDecHead(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-EnumDecHead(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-EnumDecHead(sibling-uris|lang, partition, unique*, uri*)
	
	specific-siblings-list-UnicodeEscape(|lang, partition, unique*, uri*) =
	  []
	+ [ specific-collect-UnicodeEscape(?sibling-uri*|lang, partition, unique*, uri*)
	  | specific-siblings-list-UnicodeEscape(|lang, partition, unique*, sibling-uri*) ]
	specific-siblings-option-UnicodeEscape(sibling-uris|lang, partition, unique*, uri*) =
	  (None(); match(sibling-uris|uri*))
	+ Some(specific-collect-UnicodeEscape(sibling-uris|lang, partition, unique*, uri*))
	+ specific-collect-UnicodeEscape(sibling-uris|lang, partition, unique*, uri*)
	
	

rules // Constructor Some-1, Sort OptTypeArgs0
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-OptTypeArgs0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-OptTypeArgs0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Some-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Some-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Some(_) 
  ; (Some-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Some(
      specific-collect-TypeArgs(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Some-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Some-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Some-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor None-0, Sort OptTypeArgs0
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-OptTypeArgs0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-OptTypeArgs0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-None-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-None-0(sibling-uris|lang, partition, unique*, uri*) =
    ?None() 
  ; (None-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(None-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  None-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  None-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort OptTypeArgs0, injected into TypeArgs
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-OptTypeArgs0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-OptTypeArgs0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeArgs(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Anno_ClassMod0, injected into ClassMod
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno_ClassMod0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno_ClassMod0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassMod(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Anno_ClassMod0, injected into Anno
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno_ClassMod0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno_ClassMod0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Anno_InterfaceMod0, injected into InterfaceMod
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno_InterfaceMod0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno_InterfaceMod0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceMod(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Anno_InterfaceMod0, injected into Anno
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno_InterfaceMod0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno_InterfaceMod0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Anno_AbstractMethodMod0, injected into AbstractMethodMod
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno_AbstractMethodMod0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno_AbstractMethodMod0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AbstractMethodMod(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Anno_AbstractMethodMod0, injected into Anno
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno_AbstractMethodMod0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno_AbstractMethodMod0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Anno_ConstantMod0, injected into ConstantMod
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno_ConstantMod0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno_ConstantMod0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstantMod(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Anno_ConstantMod0, injected into Anno
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno_ConstantMod0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno_ConstantMod0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Anno_ConstrMod0, injected into ConstrMod
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno_ConstrMod0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno_ConstrMod0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstrMod(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Anno_ConstrMod0, injected into Anno
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno_ConstrMod0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno_ConstrMod0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Anno_VarMod0, injected into VarMod
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno_VarMod0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno_VarMod0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-VarMod(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Anno_VarMod0, injected into Anno
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno_VarMod0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno_VarMod0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Anno_MethodMod0, injected into MethodMod
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno_MethodMod0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno_MethodMod0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Anno_MethodMod0, injected into Anno
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno_MethodMod0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno_MethodMod0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Anno_FieldMod0, injected into FieldMod
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno_FieldMod0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno_FieldMod0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FieldMod(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Anno_FieldMod0, injected into Anno
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno_FieldMod0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno_FieldMod0(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor Files-1, Sort Files
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Files(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Files(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Files-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Files-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Files(_) 
  ; (Files-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Files(
      specific-siblings-list-File(|lang, partition, unique*, child-uri*)
    ))
  ; try(Files-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Files-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Files-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor File-1, Sort File
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-File(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-File(sibling-uris|lang, partition, unique*, uri*) = specific-collect-File-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-File-1(sibling-uris|lang, partition, unique*, uri*) =
    ?File(_) 
  ; (File-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(File(
      specific-collect-CompilationUnit(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(File-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  File-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  File-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Semicolon-0, Sort TypeDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Semicolon-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Semicolon-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Semicolon() 
  ; (Semicolon-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Semicolon-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Semicolon-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Semicolon-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort TypeDec, injected into InterfaceDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceDec(sibling-uris|lang, partition, unique*, uri*)

rules // Sort TypeDec, injected into ClassDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassDec(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor StaticImportOnDemandDec-1, Sort ImportDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ImportDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ImportDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-StaticImportOnDemandDec-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-StaticImportOnDemandDec-1(sibling-uris|lang, partition, unique*, uri*) =
    ?StaticImportOnDemandDec(_) 
  ; (StaticImportOnDemandDec-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(StaticImportOnDemandDec(
      specific-collect-TypeName(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(StaticImportOnDemandDec-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  StaticImportOnDemandDec-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  StaticImportOnDemandDec-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor StaticImportDec-2, Sort ImportDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ImportDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ImportDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-StaticImportDec-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-StaticImportDec-2(sibling-uris|lang, partition, unique*, uri*) =
    ?StaticImportDec(_, _) 
  ; (StaticImportDec-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(StaticImportDec(
      specific-collect-TypeName(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-ID(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(StaticImportDec-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  StaticImportDec-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  StaticImportDec-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor TypeImportOnDemandDec-1, Sort ImportDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ImportDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ImportDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeImportOnDemandDec-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeImportOnDemandDec-1(sibling-uris|lang, partition, unique*, uri*) =
    ?TypeImportOnDemandDec(_) 
  ; (TypeImportOnDemandDec-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(TypeImportOnDemandDec(
      specific-collect-PackageName(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(TypeImportOnDemandDec-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  TypeImportOnDemandDec-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  TypeImportOnDemandDec-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor TypeImportDec-1, Sort ImportDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ImportDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ImportDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeImportDec-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeImportDec-1(sibling-uris|lang, partition, unique*, uri*) =
    ?TypeImportDec(_) 
  ; (TypeImportDec-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(TypeImportDec(
      specific-collect-TypeName(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(TypeImportDec-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  TypeImportDec-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  TypeImportDec-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort LHS, injected into ArrayAccess
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-LHS(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-LHS(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ArrayAccess(sibling-uris|lang, partition, unique*, uri*)

rules // Sort LHS, injected into FieldAccess
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-LHS(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-LHS(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FieldAccess(sibling-uris|lang, partition, unique*, uri*)

rules // Sort LHS, injected into ExprName
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-LHS(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-LHS(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ExprName(sibling-uris|lang, partition, unique*, uri*)

rules // Sort CondMid, injected into Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-CondMid(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-CondMid(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Type, injected into RefType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Type(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Type(sibling-uris|lang, partition, unique*, uri*) = specific-collect-RefType(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Type, injected into PrimType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Type(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Type(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PrimType(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor Double-0, Sort FloatType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FloatType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FloatType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Double-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Double-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Double() 
  ; (Double-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Double-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Double-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Double-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Float-0, Sort FloatType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FloatType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FloatType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Float-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Float-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Float() 
  ; (Float-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Float-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Float-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Float-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Char-0, Sort IntType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-IntType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-IntType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Char-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Char-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Char() 
  ; (Char-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Char-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Char-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Char-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Long-0, Sort IntType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-IntType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-IntType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Long-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Long-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Long() 
  ; (Long-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Long-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Long-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Long-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Int-0, Sort IntType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-IntType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-IntType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Int-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Int-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Int() 
  ; (Int-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Int-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Int-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Int-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Short-0, Sort IntType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-IntType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-IntType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Short-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Short-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Short() 
  ; (Short-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Short-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Short-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Short-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Byte-0, Sort IntType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-IntType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-IntType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Byte-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Byte-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Byte() 
  ; (Byte-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Byte-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Byte-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Byte-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort NumType, injected into FloatType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-NumType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-NumType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FloatType(sibling-uris|lang, partition, unique*, uri*)

rules // Sort NumType, injected into IntType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-NumType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-NumType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-IntType(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor Boolean-0, Sort PrimType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PrimType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PrimType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Boolean-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Boolean-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Boolean() 
  ; (Boolean-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Boolean-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Boolean-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Boolean-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort PrimType, injected into NumType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PrimType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PrimType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-NumType(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor GenericMethod-3, Sort MethodSpec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodSpec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodSpec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-GenericMethod-3(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-GenericMethod-3(sibling-uris|lang, partition, unique*, uri*) =
    ?GenericMethod(_, _, _) 
  ; (GenericMethod-3-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(GenericMethod(
      specific-collect-AmbName(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-TypeArgs(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-collect-ID(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*)
    ))
  ; try(GenericMethod-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  GenericMethod-3-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  GenericMethod-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor QSuperMethod-3, Sort MethodSpec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodSpec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodSpec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-QSuperMethod-3(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-QSuperMethod-3(sibling-uris|lang, partition, unique*, uri*) =
    ?QSuperMethod(_, _, _) 
  ; (QSuperMethod-3-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(QSuperMethod(
      specific-collect-TypeName(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-OptTypeArgs0(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-collect-ID(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*)
    ))
  ; try(QSuperMethod-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  QSuperMethod-3-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  QSuperMethod-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor SuperMethod-2, Sort MethodSpec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodSpec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodSpec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-SuperMethod-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-SuperMethod-2(sibling-uris|lang, partition, unique*, uri*) =
    ?SuperMethod(_, _) 
  ; (SuperMethod-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(SuperMethod(
      specific-collect-OptTypeArgs0(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-ID(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(SuperMethod-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  SuperMethod-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  SuperMethod-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Method-3, Sort MethodSpec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodSpec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodSpec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Method-3(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Method-3(sibling-uris|lang, partition, unique*, uri*) =
    ?Method(_, _, _) 
  ; (Method-3-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Method(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-OptTypeArgs0(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-collect-ID(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*)
    ))
  ; try(Method-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Method-3-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Method-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Method-1, Sort MethodSpec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodSpec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodSpec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Method-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Method-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Method(_) 
  ; (Method-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Method(
      specific-collect-MethodName(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Method-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Method-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Method-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor MethodArgs-1, Sort MethodArgs
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodArgs(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodArgs(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodArgs-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodArgs-1(sibling-uris|lang, partition, unique*, uri*) =
    ?MethodArgs(_) 
  ; (MethodArgs-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(MethodArgs(
      specific-siblings-list-Expr(|lang, partition, unique*, child-uri*)
    ))
  ; try(MethodArgs-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  MethodArgs-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  MethodArgs-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort ArraySubscript, injected into Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ArraySubscript(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ArraySubscript(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor ArrayAccess-2, Sort ArrayAccess
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ArrayAccess(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ArrayAccess(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ArrayAccess-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ArrayAccess-2(sibling-uris|lang, partition, unique*, uri*) =
    ?ArrayAccess(_, _) 
  ; (ArrayAccess-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ArrayAccess(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-ArraySubscript(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(ArrayAccess-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ArrayAccess-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ArrayAccess-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor QSuperField-2, Sort FieldAccess
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FieldAccess(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FieldAccess(sibling-uris|lang, partition, unique*, uri*) = specific-collect-QSuperField-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-QSuperField-2(sibling-uris|lang, partition, unique*, uri*) =
    ?QSuperField(_, _) 
  ; (QSuperField-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(QSuperField(
      specific-collect-TypeName(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-ID(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(QSuperField-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  QSuperField-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  QSuperField-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor SuperField-1, Sort FieldAccess
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FieldAccess(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FieldAccess(sibling-uris|lang, partition, unique*, uri*) = specific-collect-SuperField-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-SuperField-1(sibling-uris|lang, partition, unique*, uri*) =
    ?SuperField(_) 
  ; (SuperField-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(SuperField(
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(SuperField-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  SuperField-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  SuperField-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Field-2, Sort FieldAccess
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FieldAccess(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FieldAccess(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Field-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Field-2(sibling-uris|lang, partition, unique*, uri*) =
    ?Field(_, _) 
  ; (Field-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Field(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-ID(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(Field-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Field-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Field-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Dim-1, Sort DimExpr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-DimExpr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-DimExpr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Dim-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Dim-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Dim(_) 
  ; (Dim-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Dim(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Dim-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Dim-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Dim-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor UnboundWld-1, Sort ArrayBaseType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ArrayBaseType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ArrayBaseType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-UnboundWld-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-UnboundWld-1(sibling-uris|lang, partition, unique*, uri*) =
    ?UnboundWld(_) 
  ; (UnboundWld-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(UnboundWld(
      specific-collect-TypeName(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(UnboundWld-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  UnboundWld-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  UnboundWld-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort ArrayBaseType, injected into TypeName
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ArrayBaseType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ArrayBaseType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeName(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ArrayBaseType, injected into PrimType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ArrayBaseType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ArrayBaseType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PrimType(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor NewArrayInit-3, Sort ArrayCreationExpr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ArrayCreationExpr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ArrayCreationExpr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-NewArrayInit-3(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-NewArrayInit-3(sibling-uris|lang, partition, unique*, uri*) =
    ?NewArrayInit(_, _, _) 
  ; (NewArrayInit-3-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(NewArrayInit(
      specific-collect-ArrayBaseType(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-list-Dim(|lang, partition, unique*, child-uri*), 
      specific-collect-ArrayInit(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(NewArrayInit-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  NewArrayInit-3-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  NewArrayInit-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Semicolon-0, Sort ClassMemberDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassMemberDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassMemberDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Semicolon-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Semicolon-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Semicolon() 
  ; (Semicolon-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Semicolon-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Semicolon-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Semicolon-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort ClassMemberDec, injected into InterfaceDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassMemberDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassMemberDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceDec(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ClassMemberDec, injected into ClassDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassMemberDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassMemberDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassDec(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ClassMemberDec, injected into MethodDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassMemberDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassMemberDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodDec(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ClassMemberDec, injected into FieldDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassMemberDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassMemberDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FieldDec(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ClassBodyDec, injected into ConstrDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassBodyDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassBodyDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstrDec(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ClassBodyDec, injected into StaticInit
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassBodyDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassBodyDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-StaticInit(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ClassBodyDec, injected into InstanceInit
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassBodyDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassBodyDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InstanceInit(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ClassBodyDec, injected into ClassMemberDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassBodyDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassBodyDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassMemberDec(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor SuperDec-1, Sort Super
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Super(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Super(sibling-uris|lang, partition, unique*, uri*) = specific-collect-SuperDec-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-SuperDec-1(sibling-uris|lang, partition, unique*, uri*) =
    ?SuperDec(_) 
  ; (SuperDec-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(SuperDec(
      specific-collect-ClassType(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(SuperDec-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  SuperDec-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  SuperDec-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort ClassMod, injected into StrictFP
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-StrictFP(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ClassMod, injected into Final
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Final(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ClassMod, injected into Static
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Static(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ClassMod, injected into Private
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Private(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ClassMod, injected into Protected
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Protected(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ClassMod, injected into Public
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Public(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ClassMod, injected into Abstract
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Abstract(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor ClassBody-1, Sort ClassBody
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassBody(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassBody(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassBody-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassBody-1(sibling-uris|lang, partition, unique*, uri*) =
    ?ClassBody(_) 
  ; (ClassBody-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ClassBody(
      specific-siblings-list-ClassBodyDec(|lang, partition, unique*, child-uri*)
    ))
  ; try(ClassBody-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ClassBody-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ClassBody-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort ClassDec, injected into EnumDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-EnumDec(sibling-uris|lang, partition, unique*, uri*)

rules // Sort InterfaceMod, injected into StrictFP
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InterfaceMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-StrictFP(sibling-uris|lang, partition, unique*, uri*)

rules // Sort InterfaceMod, injected into Static
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InterfaceMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Static(sibling-uris|lang, partition, unique*, uri*)

rules // Sort InterfaceMod, injected into Abstract
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InterfaceMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Abstract(sibling-uris|lang, partition, unique*, uri*)

rules // Sort InterfaceMod, injected into Private
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InterfaceMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Private(sibling-uris|lang, partition, unique*, uri*)

rules // Sort InterfaceMod, injected into Protected
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InterfaceMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Protected(sibling-uris|lang, partition, unique*, uri*)

rules // Sort InterfaceMod, injected into Public
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InterfaceMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Public(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor Semicolon-0, Sort InterfaceMemberDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceMemberDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InterfaceMemberDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Semicolon-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Semicolon-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Semicolon() 
  ; (Semicolon-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Semicolon-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Semicolon-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Semicolon-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort InterfaceMemberDec, injected into InterfaceDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceMemberDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InterfaceMemberDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceDec(sibling-uris|lang, partition, unique*, uri*)

rules // Sort InterfaceMemberDec, injected into ClassDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceMemberDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InterfaceMemberDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassDec(sibling-uris|lang, partition, unique*, uri*)

rules // Sort InterfaceMemberDec, injected into AbstractMethodDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceMemberDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InterfaceMemberDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AbstractMethodDec(sibling-uris|lang, partition, unique*, uri*)

rules // Sort InterfaceMemberDec, injected into ConstantDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceMemberDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InterfaceMemberDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstantDec(sibling-uris|lang, partition, unique*, uri*)

rules // Sort InterfaceDec, injected into AnnoDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InterfaceDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AnnoDec(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor DefaultVal-1, Sort DefaultVal
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-DefaultVal(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-DefaultVal(sibling-uris|lang, partition, unique*, uri*) = specific-collect-DefaultVal-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-DefaultVal-1(sibling-uris|lang, partition, unique*, uri*) =
    ?DefaultVal(_) 
  ; (DefaultVal-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(DefaultVal(
      specific-collect-ElemVal(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(DefaultVal-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  DefaultVal-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  DefaultVal-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Semicolon-0, Sort AnnoElemDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AnnoElemDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AnnoElemDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Semicolon-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Semicolon-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Semicolon() 
  ; (Semicolon-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Semicolon-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Semicolon-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Semicolon-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort AnnoElemDec, injected into AnnoDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AnnoElemDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AnnoElemDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AnnoDec(sibling-uris|lang, partition, unique*, uri*)

rules // Sort AnnoElemDec, injected into EnumDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AnnoElemDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AnnoElemDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-EnumDec(sibling-uris|lang, partition, unique*, uri*)

rules // Sort AnnoElemDec, injected into InterfaceDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AnnoElemDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AnnoElemDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceDec(sibling-uris|lang, partition, unique*, uri*)

rules // Sort AnnoElemDec, injected into ClassDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AnnoElemDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AnnoElemDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassDec(sibling-uris|lang, partition, unique*, uri*)

rules // Sort AnnoElemDec, injected into ConstantDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AnnoElemDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AnnoElemDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstantDec(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor AnnoMethodDec-4, Sort AnnoElemDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AnnoElemDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AnnoElemDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AnnoMethodDec-4(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AnnoMethodDec-4(sibling-uris|lang, partition, unique*, uri*) =
    ?AnnoMethodDec(_, _, _, _) 
  ; (AnnoMethodDec-4-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AnnoMethodDec(
      specific-siblings-list-AbstractMethodMod(|lang, partition, unique*, child-uri*), 
      specific-collect-Type(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-ID(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-siblings-option-DefaultVal(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*)
    ))
  ; try(AnnoMethodDec-4-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AnnoMethodDec-4-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AnnoMethodDec-4-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor AnnoDecHead-2, Sort AnnoDecHead
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AnnoDecHead(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AnnoDecHead(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AnnoDecHead-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AnnoDecHead-2(sibling-uris|lang, partition, unique*, uri*) =
    ?AnnoDecHead(_, _) 
  ; (AnnoDecHead-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AnnoDecHead(
      specific-siblings-list-Anno_InterfaceMod0(|lang, partition, unique*, child-uri*), 
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(AnnoDecHead-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AnnoDecHead-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AnnoDecHead-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor AnnoDec-2, Sort AnnoDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AnnoDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AnnoDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AnnoDec-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AnnoDec-2(sibling-uris|lang, partition, unique*, uri*) =
    ?AnnoDec(_, _) 
  ; (AnnoDec-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AnnoDec(
      specific-collect-AnnoDecHead(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-list-AnnoElemDec(|lang, partition, unique*, child-uri*)
    ))
  ; try(AnnoDec-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AnnoDec-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AnnoDec-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort AbstractMethodMod, injected into Abstract
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AbstractMethodMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AbstractMethodMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Abstract(sibling-uris|lang, partition, unique*, uri*)

rules // Sort AbstractMethodMod, injected into Public
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AbstractMethodMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AbstractMethodMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Public(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor DeprAbstractMethodDec-7, Sort AbstractMethodDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AbstractMethodDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AbstractMethodDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-DeprAbstractMethodDec-7(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-DeprAbstractMethodDec-7(sibling-uris|lang, partition, unique*, uri*) =
    ?DeprAbstractMethodDec(_, _, _, _, _, _, _) 
  ; (DeprAbstractMethodDec-7-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(DeprAbstractMethodDec(
      specific-siblings-list-Anno_AbstractMethodMod0(|lang, partition, unique*, child-uri*), 
      specific-siblings-option-TypeParams(?sibling-uri-0*|lang, partition, unique*, uri*), 
      specific-collect-ResultType(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-collect-ID(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*), 
      specific-collect-MethodParams(?sibling-uri-3*|lang, partition, unique*, sibling-uri-2*), 
      specific-siblings-list-Dim(|lang, partition, unique*, child-uri*), 
      specific-siblings-option-Throws(?sibling-uri-4*|lang, partition, unique*, sibling-uri-3*)
    ))
  ; try(DeprAbstractMethodDec-7-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  DeprAbstractMethodDec-7-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  DeprAbstractMethodDec-7-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor AbstractMethodDec-6, Sort AbstractMethodDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AbstractMethodDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AbstractMethodDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AbstractMethodDec-6(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AbstractMethodDec-6(sibling-uris|lang, partition, unique*, uri*) =
    ?AbstractMethodDec(_, _, _, _, _, _) 
  ; (AbstractMethodDec-6-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AbstractMethodDec(
      specific-siblings-list-Anno_AbstractMethodMod0(|lang, partition, unique*, child-uri*), 
      specific-siblings-option-TypeParams(?sibling-uri-0*|lang, partition, unique*, uri*), 
      specific-collect-ResultType(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-collect-ID(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*), 
      specific-collect-MethodParams(?sibling-uri-3*|lang, partition, unique*, sibling-uri-2*), 
      specific-siblings-option-Throws(?sibling-uri-4*|lang, partition, unique*, sibling-uri-3*)
    ))
  ; try(AbstractMethodDec-6-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AbstractMethodDec-6-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AbstractMethodDec-6-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort ConstantMod, injected into Final
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstantMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ConstantMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Final(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ConstantMod, injected into Static
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstantMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ConstantMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Static(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ConstantMod, injected into Public
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstantMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ConstantMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Public(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor EnumBodyDecs-1, Sort EnumBodyDecs
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-EnumBodyDecs(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-EnumBodyDecs(sibling-uris|lang, partition, unique*, uri*) = specific-collect-EnumBodyDecs-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-EnumBodyDecs-1(sibling-uris|lang, partition, unique*, uri*) =
    ?EnumBodyDecs(_) 
  ; (EnumBodyDecs-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(EnumBodyDecs(
      specific-siblings-list-ClassBodyDec(|lang, partition, unique*, child-uri*)
    ))
  ; try(EnumBodyDecs-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  EnumBodyDecs-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  EnumBodyDecs-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort EnumConstArgs, injected into Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-EnumConstArgs(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-EnumConstArgs(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor EnumConst-3, Sort EnumConst
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-EnumConst(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-EnumConst(sibling-uris|lang, partition, unique*, uri*) = specific-collect-EnumConst-3(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-EnumConst-3(sibling-uris|lang, partition, unique*, uri*) =
    ?EnumConst(_, _, _) 
  ; (EnumConst-3-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(EnumConst(
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-option-EnumConstArgs(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-siblings-option-ClassBody(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*)
    ))
  ; try(EnumConst-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  EnumConst-3-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  EnumConst-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor EnumBody-2, Sort EnumBody
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-EnumBody(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-EnumBody(sibling-uris|lang, partition, unique*, uri*) = specific-collect-EnumBody-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-EnumBody-2(sibling-uris|lang, partition, unique*, uri*) =
    ?EnumBody(_, _) 
  ; (EnumBody-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(EnumBody(
      specific-siblings-list-EnumConst(|lang, partition, unique*, child-uri*), 
      specific-siblings-option-EnumBodyDecs(?sibling-uri-0*|lang, partition, unique*, uri*)
    ))
  ; try(EnumBody-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  EnumBody-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  EnumBody-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor EnumDec-2, Sort EnumDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-EnumDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-EnumDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-EnumDec-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-EnumDec-2(sibling-uris|lang, partition, unique*, uri*) =
    ?EnumDec(_, _) 
  ; (EnumDec-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(EnumDec(
      specific-collect-EnumDecHead(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-EnumBody(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(EnumDec-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  EnumDec-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  EnumDec-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort ConstrMod, injected into Private
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstrMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ConstrMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Private(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ConstrMod, injected into Protected
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstrMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ConstrMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Protected(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ConstrMod, injected into Public
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstrMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ConstrMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Public(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor QSuperConstrInv-3, Sort ConstrInv
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstrInv(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ConstrInv(sibling-uris|lang, partition, unique*, uri*) = specific-collect-QSuperConstrInv-3(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-QSuperConstrInv-3(sibling-uris|lang, partition, unique*, uri*) =
    ?QSuperConstrInv(_, _, _) 
  ; (QSuperConstrInv-3-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(QSuperConstrInv(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-OptTypeArgs0(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-siblings-list-Expr(|lang, partition, unique*, child-uri*)
    ))
  ; try(QSuperConstrInv-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  QSuperConstrInv-3-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  QSuperConstrInv-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor SuperConstrInv-2, Sort ConstrInv
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstrInv(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ConstrInv(sibling-uris|lang, partition, unique*, uri*) = specific-collect-SuperConstrInv-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-SuperConstrInv-2(sibling-uris|lang, partition, unique*, uri*) =
    ?SuperConstrInv(_, _) 
  ; (SuperConstrInv-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(SuperConstrInv(
      specific-collect-OptTypeArgs0(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-list-Expr(|lang, partition, unique*, child-uri*)
    ))
  ; try(SuperConstrInv-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  SuperConstrInv-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  SuperConstrInv-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor AltConstrInv-2, Sort ConstrInv
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstrInv(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ConstrInv(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AltConstrInv-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AltConstrInv-2(sibling-uris|lang, partition, unique*, uri*) =
    ?AltConstrInv(_, _) 
  ; (AltConstrInv-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AltConstrInv(
      specific-collect-OptTypeArgs0(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-list-Expr(|lang, partition, unique*, child-uri*)
    ))
  ; try(AltConstrInv-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AltConstrInv-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AltConstrInv-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor StaticInit-1, Sort StaticInit
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-StaticInit(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-StaticInit(sibling-uris|lang, partition, unique*, uri*) = specific-collect-StaticInit-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-StaticInit-1(sibling-uris|lang, partition, unique*, uri*) =
    ?StaticInit(_) 
  ; (StaticInit-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(StaticInit(
      specific-collect-Block(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(StaticInit-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  StaticInit-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  StaticInit-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor InstanceInit-1, Sort InstanceInit
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InstanceInit(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InstanceInit(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InstanceInit-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InstanceInit-1(sibling-uris|lang, partition, unique*, uri*) =
    ?InstanceInit(_) 
  ; (InstanceInit-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(InstanceInit(
      specific-collect-Block(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(InstanceInit-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  InstanceInit-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  InstanceInit-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor NoMethodBody-0, Sort MethodBody
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodBody(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodBody(sibling-uris|lang, partition, unique*, uri*) = specific-collect-NoMethodBody-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-NoMethodBody-0(sibling-uris|lang, partition, unique*, uri*) =
    ?NoMethodBody() 
  ; (NoMethodBody-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(NoMethodBody-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  NoMethodBody-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  NoMethodBody-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort MethodBody, injected into Block
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodBody(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodBody(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Block(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ExceptionType, injected into ClassType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ExceptionType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ExceptionType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassType(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor ThrowsDec-1, Sort Throws
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Throws(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Throws(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ThrowsDec-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ThrowsDec-1(sibling-uris|lang, partition, unique*, uri*) =
    ?ThrowsDec(_) 
  ; (ThrowsDec-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ThrowsDec(
      specific-siblings-list-ExceptionType(|lang, partition, unique*, child-uri*)
    ))
  ; try(ThrowsDec-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ThrowsDec-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ThrowsDec-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort MethodMod, injected into StrictFP
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-StrictFP(sibling-uris|lang, partition, unique*, uri*)

rules // Sort MethodMod, injected into Native
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Native(sibling-uris|lang, partition, unique*, uri*)

rules // Sort MethodMod, injected into Synchronized
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Synchronized(sibling-uris|lang, partition, unique*, uri*)

rules // Sort MethodMod, injected into Final
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Final(sibling-uris|lang, partition, unique*, uri*)

rules // Sort MethodMod, injected into Static
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Static(sibling-uris|lang, partition, unique*, uri*)

rules // Sort MethodMod, injected into Abstract
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Abstract(sibling-uris|lang, partition, unique*, uri*)

rules // Sort MethodMod, injected into Private
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Private(sibling-uris|lang, partition, unique*, uri*)

rules // Sort MethodMod, injected into Protected
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Protected(sibling-uris|lang, partition, unique*, uri*)

rules // Sort MethodMod, injected into Public
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Public(sibling-uris|lang, partition, unique*, uri*)

rules // Sort VarMod, injected into Final
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-VarMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-VarMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Final(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor Void-0, Sort ResultType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ResultType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ResultType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Void-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Void-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Void() 
  ; (Void-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Void-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Void-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Void-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort ResultType, injected into Type
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ResultType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ResultType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Type(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor MethodParams-1, Sort MethodParams
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodParams(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodParams(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodParams-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodParams-1(sibling-uris|lang, partition, unique*, uri*) =
    ?MethodParams(_) 
  ; (MethodParams-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(MethodParams(
      specific-siblings-list-FormalParam(|lang, partition, unique*, child-uri*)
    ))
  ; try(MethodParams-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  MethodParams-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  MethodParams-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort BlockStm, injected into Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-BlockStm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-BlockStm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor ClassDecStm-1, Sort BlockStm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-BlockStm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-BlockStm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassDecStm-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassDecStm-1(sibling-uris|lang, partition, unique*, uri*) =
    ?ClassDecStm(_) 
  ; (ClassDecStm-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ClassDecStm(
      specific-collect-ClassDec(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(ClassDecStm-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ClassDecStm-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ClassDecStm-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Block-1, Sort Block
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Block(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Block(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Block-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Block-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Block(_) 
  ; (Block-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Block(
      specific-siblings-list-BlockStm(|lang, partition, unique*, child-uri*)
    ))
  ; try(Block-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Block-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Block-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Catch-2, Sort CatchClause
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-CatchClause(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-CatchClause(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Catch-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Catch-2(sibling-uris|lang, partition, unique*, uri*) =
    ?Catch(_, _) 
  ; (Catch-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Catch(
      specific-collect-FormalParam(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Block(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(Catch-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Catch-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Catch-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Default-0, Sort SwitchLabel
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-SwitchLabel(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-SwitchLabel(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Default-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Default-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Default() 
  ; (Default-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Default-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Default-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Default-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Case-1, Sort SwitchLabel
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-SwitchLabel(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-SwitchLabel(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Case-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Case-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Case(_) 
  ; (Case-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Case(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Case-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Case-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Case-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor SwitchGroup-2, Sort SwitchGroup
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-SwitchGroup(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-SwitchGroup(sibling-uris|lang, partition, unique*, uri*) = specific-collect-SwitchGroup-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-SwitchGroup-2(sibling-uris|lang, partition, unique*, uri*) =
    ?SwitchGroup(_, _) 
  ; (SwitchGroup-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(SwitchGroup(
      specific-siblings-list-SwitchLabel(|lang, partition, unique*, child-uri*), 
      specific-siblings-list-BlockStm(|lang, partition, unique*, child-uri*)
    ))
  ; try(SwitchGroup-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  SwitchGroup-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  SwitchGroup-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor SwitchBlock-2, Sort SwitchBlock
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-SwitchBlock(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-SwitchBlock(sibling-uris|lang, partition, unique*, uri*) = specific-collect-SwitchBlock-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-SwitchBlock-2(sibling-uris|lang, partition, unique*, uri*) =
    ?SwitchBlock(_, _) 
  ; (SwitchBlock-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(SwitchBlock(
      specific-siblings-list-SwitchGroup(|lang, partition, unique*, child-uri*), 
      specific-siblings-list-SwitchLabel(|lang, partition, unique*, child-uri*)
    ))
  ; try(SwitchBlock-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  SwitchBlock-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  SwitchBlock-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Try-3, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Try-3(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Try-3(sibling-uris|lang, partition, unique*, uri*) =
    ?Try(_, _, _) 
  ; (Try-3-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Try(
      specific-collect-Block(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-list-CatchClause(|lang, partition, unique*, child-uri*), 
      specific-collect-Block(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(Try-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Try-3-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Try-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Try-2, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Try-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Try-2(sibling-uris|lang, partition, unique*, uri*) =
    ?Try(_, _) 
  ; (Try-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Try(
      specific-collect-Block(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-list-CatchClause(|lang, partition, unique*, child-uri*)
    ))
  ; try(Try-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Try-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Try-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Synchronized-2, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Synchronized-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Synchronized-2(sibling-uris|lang, partition, unique*, uri*) =
    ?Synchronized(_, _) 
  ; (Synchronized-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Synchronized(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Block(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(Synchronized-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Synchronized-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Synchronized-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Throw-1, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Throw-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Throw-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Throw(_) 
  ; (Throw-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Throw(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Throw-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Throw-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Throw-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Return-1, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Return-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Return-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Return(_) 
  ; (Return-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Return(
      specific-siblings-option-Expr(?sibling-uri-0*|lang, partition, unique*, uri*)
    ))
  ; try(Return-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Return-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Return-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Continue-1, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Continue-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Continue-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Continue(_) 
  ; (Continue-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Continue(
      specific-siblings-option-ID(?sibling-uri-0*|lang, partition, unique*, uri*)
    ))
  ; try(Continue-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Continue-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Continue-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Break-1, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Break-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Break-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Break(_) 
  ; (Break-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Break(
      specific-siblings-option-ID(?sibling-uri-0*|lang, partition, unique*, uri*)
    ))
  ; try(Break-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Break-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Break-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor ForEach-3, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ForEach-3(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ForEach-3(sibling-uris|lang, partition, unique*, uri*) =
    ?ForEach(_, _, _) 
  ; (ForEach-3-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ForEach(
      specific-collect-FormalParam(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-collect-Stm(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*)
    ))
  ; try(ForEach-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ForEach-3-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ForEach-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor For-4, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-For-4(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-For-4(sibling-uris|lang, partition, unique*, uri*) =
    ?For(_, _, _, _) 
  ; (For-4-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(For(
      specific-siblings-list-Expr(|lang, partition, unique*, child-uri*), 
      specific-siblings-option-Expr(?sibling-uri-0*|lang, partition, unique*, uri*), 
      specific-siblings-list-Expr(|lang, partition, unique*, child-uri*), 
      specific-collect-Stm(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(For-4-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  For-4-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  For-4-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor For-4, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-For-4(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-For-4(sibling-uris|lang, partition, unique*, uri*) =
    ?For(_, _, _, _) 
  ; (For-4-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(For(
      specific-collect-LocalVarDec(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-option-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-siblings-list-Expr(|lang, partition, unique*, child-uri*), 
      specific-collect-Stm(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*)
    ))
  ; try(For-4-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  For-4-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  For-4-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor DoWhile-2, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-DoWhile-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-DoWhile-2(sibling-uris|lang, partition, unique*, uri*) =
    ?DoWhile(_, _) 
  ; (DoWhile-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(DoWhile(
      specific-collect-Stm(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(DoWhile-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  DoWhile-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  DoWhile-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor While-2, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-While-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-While-2(sibling-uris|lang, partition, unique*, uri*) =
    ?While(_, _) 
  ; (While-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(While(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Stm(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(While-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  While-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  While-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Switch-2, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Switch-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Switch-2(sibling-uris|lang, partition, unique*, uri*) =
    ?Switch(_, _) 
  ; (Switch-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Switch(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-SwitchBlock(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(Switch-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Switch-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Switch-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor AssertStm-2, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AssertStm-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AssertStm-2(sibling-uris|lang, partition, unique*, uri*) =
    ?AssertStm(_, _) 
  ; (AssertStm-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AssertStm(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(AssertStm-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AssertStm-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AssertStm-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor AssertStm-1, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AssertStm-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AssertStm-1(sibling-uris|lang, partition, unique*, uri*) =
    ?AssertStm(_) 
  ; (AssertStm-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AssertStm(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(AssertStm-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AssertStm-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AssertStm-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor If-3, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-If-3(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-If-3(sibling-uris|lang, partition, unique*, uri*) =
    ?If(_, _, _) 
  ; (If-3-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(If(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Stm(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-collect-Stm(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*)
    ))
  ; try(If-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  If-3-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  If-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor If-2, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-If-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-If-2(sibling-uris|lang, partition, unique*, uri*) =
    ?If(_, _) 
  ; (If-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(If(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Stm(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(If-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  If-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  If-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Labeled-2, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Labeled-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Labeled-2(sibling-uris|lang, partition, unique*, uri*) =
    ?Labeled(_, _) 
  ; (Labeled-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Labeled(
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Stm(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(Labeled-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Labeled-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Labeled-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Empty-0, Sort Stm
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Empty-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Empty-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Empty() 
  ; (Empty-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Empty-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Empty-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Empty-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort Stm, injected into Block
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Block(sibling-uris|lang, partition, unique*, uri*)

rules // Sort FieldMod, injected into Volatile
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FieldMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FieldMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Volatile(sibling-uris|lang, partition, unique*, uri*)

rules // Sort FieldMod, injected into Transient
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FieldMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FieldMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Transient(sibling-uris|lang, partition, unique*, uri*)

rules // Sort FieldMod, injected into Final
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FieldMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FieldMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Final(sibling-uris|lang, partition, unique*, uri*)

rules // Sort FieldMod, injected into Static
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FieldMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FieldMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Static(sibling-uris|lang, partition, unique*, uri*)

rules // Sort FieldMod, injected into Private
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FieldMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FieldMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Private(sibling-uris|lang, partition, unique*, uri*)

rules // Sort FieldMod, injected into Protected
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FieldMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FieldMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Protected(sibling-uris|lang, partition, unique*, uri*)

rules // Sort FieldMod, injected into Public
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FieldMod(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FieldMod(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Public(sibling-uris|lang, partition, unique*, uri*)

rules // Sort VarInit, injected into ArrayInit
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-VarInit(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-VarInit(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ArrayInit(sibling-uris|lang, partition, unique*, uri*)

rules // Sort VarInit, injected into Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-VarInit(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-VarInit(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor Dim-0, Sort Dim
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Dim(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Dim(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Dim-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Dim-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Dim() 
  ; (Dim-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Dim-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Dim-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Dim-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor ArrayVarDecId-2, Sort VarDecId
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-VarDecId(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-VarDecId(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ArrayVarDecId-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ArrayVarDecId-2(sibling-uris|lang, partition, unique*, uri*) =
    ?ArrayVarDecId(_, _) 
  ; (ArrayVarDecId-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ArrayVarDecId(
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-list-Dim(|lang, partition, unique*, child-uri*)
    ))
  ; try(ArrayVarDecId-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ArrayVarDecId-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ArrayVarDecId-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort VarDecId, injected into ID
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-VarDecId(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-VarDecId(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ID(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor VarDec-2, Sort VarDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-VarDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-VarDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-VarDec-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-VarDec-2(sibling-uris|lang, partition, unique*, uri*) =
    ?VarDec(_, _) 
  ; (VarDec-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(VarDec(
      specific-collect-VarDecId(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-VarInit(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(VarDec-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  VarDec-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  VarDec-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor VarDec-1, Sort VarDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-VarDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-VarDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-VarDec-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-VarDec-1(sibling-uris|lang, partition, unique*, uri*) =
    ?VarDec(_) 
  ; (VarDec-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(VarDec(
      specific-collect-VarDecId(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(VarDec-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  VarDec-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  VarDec-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor ArrayInit-1, Sort ArrayInit
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ArrayInit(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ArrayInit(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ArrayInit-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ArrayInit-1(sibling-uris|lang, partition, unique*, uri*) =
    ?ArrayInit(_) 
  ; (ArrayInit-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ArrayInit(
      specific-siblings-list-VarInit(|lang, partition, unique*, child-uri*)
    ))
  ; try(ArrayInit-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ArrayInit-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ArrayInit-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor ElemValArrayInit-1, Sort ElemVal
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ElemVal(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ElemVal(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ElemValArrayInit-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ElemValArrayInit-1(sibling-uris|lang, partition, unique*, uri*) =
    ?ElemValArrayInit(_) 
  ; (ElemValArrayInit-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ElemValArrayInit(
      specific-siblings-list-ElemVal(|lang, partition, unique*, child-uri*)
    ))
  ; try(ElemValArrayInit-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ElemValArrayInit-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ElemValArrayInit-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort ElemVal, injected into Anno
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ElemVal(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ElemVal(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno(sibling-uris|lang, partition, unique*, uri*)

rules // Sort ElemVal, injected into Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ElemVal(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ElemVal(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor ElemValPair-2, Sort ElemValPair
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ElemValPair(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ElemValPair(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ElemValPair-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ElemValPair-2(sibling-uris|lang, partition, unique*, uri*) =
    ?ElemValPair(_, _) 
  ; (ElemValPair-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ElemValPair(
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-ElemVal(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(ElemValPair-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ElemValPair-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ElemValPair-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor MarkerAnno-1, Sort Anno
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MarkerAnno-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MarkerAnno-1(sibling-uris|lang, partition, unique*, uri*) =
    ?MarkerAnno(_) 
  ; (MarkerAnno-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(MarkerAnno(
      specific-collect-InterfaceType(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(MarkerAnno-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  MarkerAnno-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  MarkerAnno-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor SingleElemAnno-2, Sort Anno
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno(sibling-uris|lang, partition, unique*, uri*) = specific-collect-SingleElemAnno-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-SingleElemAnno-2(sibling-uris|lang, partition, unique*, uri*) =
    ?SingleElemAnno(_, _) 
  ; (SingleElemAnno-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(SingleElemAnno(
      specific-collect-InterfaceType(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-ElemVal(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(SingleElemAnno-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  SingleElemAnno-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  SingleElemAnno-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Anno-2, Sort Anno
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Anno-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Anno-2(sibling-uris|lang, partition, unique*, uri*) =
    ?Anno(_, _) 
  ; (Anno-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Anno(
      specific-collect-InterfaceType(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-list-ElemValPair(|lang, partition, unique*, child-uri*)
    ))
  ; try(Anno-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Anno-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Anno-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor ArrayType-1, Sort ArrayType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ArrayType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ArrayType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ArrayType-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ArrayType-1(sibling-uris|lang, partition, unique*, uri*) =
    ?ArrayType(_) 
  ; (ArrayType-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ArrayType(
      specific-collect-Type(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(ArrayType-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ArrayType-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ArrayType-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Member-3, Sort TypeDecSpec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeDecSpec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeDecSpec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Member-3(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Member-3(sibling-uris|lang, partition, unique*, uri*) =
    ?Member(_, _, _) 
  ; (Member-3-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Member(
      specific-collect-TypeDecSpec(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-TypeArgs(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-collect-ID(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*)
    ))
  ; try(Member-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Member-3-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Member-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort TypeDecSpec, injected into TypeName
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeDecSpec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeDecSpec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeName(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor InterfaceType-2, Sort InterfaceType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InterfaceType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceType-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InterfaceType-2(sibling-uris|lang, partition, unique*, uri*) =
    ?InterfaceType(_, _) 
  ; (InterfaceType-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(InterfaceType(
      specific-collect-TypeDecSpec(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-OptTypeArgs0(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(InterfaceType-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  InterfaceType-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  InterfaceType-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor ClassType-2, Sort ClassType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassType-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassType-2(sibling-uris|lang, partition, unique*, uri*) =
    ?ClassType(_, _) 
  ; (ClassType-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ClassType(
      specific-collect-TypeDecSpec(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-OptTypeArgs0(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(ClassType-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ClassType-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ClassType-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor ClassOrInterfaceType-2, Sort ClassOrInterfaceType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassOrInterfaceType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassOrInterfaceType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassOrInterfaceType-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassOrInterfaceType-2(sibling-uris|lang, partition, unique*, uri*) =
    ?ClassOrInterfaceType(_, _) 
  ; (ClassOrInterfaceType-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ClassOrInterfaceType(
      specific-collect-TypeDecSpec(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-OptTypeArgs0(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(ClassOrInterfaceType-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ClassOrInterfaceType-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ClassOrInterfaceType-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort RefType, injected into ArrayType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-RefType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-RefType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ArrayType(sibling-uris|lang, partition, unique*, uri*)

rules // Sort RefType, injected into ClassOrInterfaceType
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-RefType(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-RefType(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassOrInterfaceType(sibling-uris|lang, partition, unique*, uri*)

rules // Sort TypeVarId, injected into ID
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeVarId(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeVarId(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ID(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor TypeParams-1, Sort TypeParams
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeParams(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeParams(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeParams-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeParams-1(sibling-uris|lang, partition, unique*, uri*) =
    ?TypeParams(_) 
  ; (TypeParams-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(TypeParams(
      specific-siblings-list-TypeParam(|lang, partition, unique*, child-uri*)
    ))
  ; try(TypeParams-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  TypeParams-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  TypeParams-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor TypeBound-1, Sort TypeBound
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeBound(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeBound(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeBound-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeBound-1(sibling-uris|lang, partition, unique*, uri*) =
    ?TypeBound(_) 
  ; (TypeBound-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(TypeBound(
      specific-siblings-list-ClassOrInterfaceType(|lang, partition, unique*, child-uri*)
    ))
  ; try(TypeBound-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  TypeBound-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  TypeBound-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor TypeParam-2, Sort TypeParam
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeParam(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeParam(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeParam-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeParam-2(sibling-uris|lang, partition, unique*, uri*) =
    ?TypeParam(_, _) 
  ; (TypeParam-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(TypeParam(
      specific-collect-TypeVarId(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-option-TypeBound(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(TypeParam-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  TypeParam-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  TypeParam-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor WildcardLowerBound-1, Sort WildcardBound
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-WildcardBound(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-WildcardBound(sibling-uris|lang, partition, unique*, uri*) = specific-collect-WildcardLowerBound-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-WildcardLowerBound-1(sibling-uris|lang, partition, unique*, uri*) =
    ?WildcardLowerBound(_) 
  ; (WildcardLowerBound-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(WildcardLowerBound(
      specific-collect-RefType(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(WildcardLowerBound-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  WildcardLowerBound-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  WildcardLowerBound-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor WildcardUpperBound-1, Sort WildcardBound
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-WildcardBound(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-WildcardBound(sibling-uris|lang, partition, unique*, uri*) = specific-collect-WildcardUpperBound-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-WildcardUpperBound-1(sibling-uris|lang, partition, unique*, uri*) =
    ?WildcardUpperBound(_) 
  ; (WildcardUpperBound-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(WildcardUpperBound(
      specific-collect-RefType(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(WildcardUpperBound-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  WildcardUpperBound-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  WildcardUpperBound-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Wildcard-1, Sort ActualTypeArg
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ActualTypeArg(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ActualTypeArg(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Wildcard-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Wildcard-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Wildcard(_) 
  ; (Wildcard-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Wildcard(
      specific-siblings-option-WildcardBound(?sibling-uri-0*|lang, partition, unique*, uri*)
    ))
  ; try(Wildcard-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Wildcard-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Wildcard-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort ActualTypeArg, injected into Type
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ActualTypeArg(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ActualTypeArg(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Type(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor TypeArgs-1, Sort TypeArgs
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeArgs(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeArgs(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeArgs-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeArgs-1(sibling-uris|lang, partition, unique*, uri*) =
    ?TypeArgs(_) 
  ; (TypeArgs-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(TypeArgs(
      specific-siblings-list-ActualTypeArg(|lang, partition, unique*, child-uri*)
    ))
  ; try(TypeArgs-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  TypeArgs-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  TypeArgs-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor VoidClass-0, Sort ClassLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-VoidClass-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-VoidClass-0(sibling-uris|lang, partition, unique*, uri*) =
    ?VoidClass() 
  ; (VoidClass-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(VoidClass-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  VoidClass-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  VoidClass-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Class-1, Sort ClassLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Class-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Class-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Class(_) 
  ; (Class-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Class(
      specific-collect-Type(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Class-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Class-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Class-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort Literal, injected into ClassLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Literal(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Literal(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassLiteral(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Literal, injected into NullLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Literal(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Literal(sibling-uris|lang, partition, unique*, uri*) = specific-collect-NullLiteral(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Literal, injected into StringLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Literal(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Literal(sibling-uris|lang, partition, unique*, uri*) = specific-collect-StringLiteral(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Literal, injected into CharLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Literal(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Literal(sibling-uris|lang, partition, unique*, uri*) = specific-collect-CharLiteral(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Literal, injected into BoolLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Literal(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Literal(sibling-uris|lang, partition, unique*, uri*) = specific-collect-BoolLiteral(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Literal, injected into FloatLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Literal(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Literal(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FloatLiteral(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Literal, injected into IntLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Literal(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Literal(sibling-uris|lang, partition, unique*, uri*) = specific-collect-IntLiteral(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor AssignOr-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AssignOr-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AssignOr-2(sibling-uris|lang, partition, unique*, uri*) =
    ?AssignOr(_, _) 
  ; (AssignOr-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AssignOr(
      specific-collect-LHS(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(AssignOr-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AssignOr-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AssignOr-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor AssignExcOr-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AssignExcOr-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AssignExcOr-2(sibling-uris|lang, partition, unique*, uri*) =
    ?AssignExcOr(_, _) 
  ; (AssignExcOr-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AssignExcOr(
      specific-collect-LHS(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(AssignExcOr-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AssignExcOr-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AssignExcOr-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor AssignAnd-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AssignAnd-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AssignAnd-2(sibling-uris|lang, partition, unique*, uri*) =
    ?AssignAnd(_, _) 
  ; (AssignAnd-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AssignAnd(
      specific-collect-LHS(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(AssignAnd-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AssignAnd-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AssignAnd-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor AssignURightShift-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AssignURightShift-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AssignURightShift-2(sibling-uris|lang, partition, unique*, uri*) =
    ?AssignURightShift(_, _) 
  ; (AssignURightShift-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AssignURightShift(
      specific-collect-LHS(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(AssignURightShift-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AssignURightShift-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AssignURightShift-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor AssignRightShift-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AssignRightShift-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AssignRightShift-2(sibling-uris|lang, partition, unique*, uri*) =
    ?AssignRightShift(_, _) 
  ; (AssignRightShift-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AssignRightShift(
      specific-collect-LHS(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(AssignRightShift-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AssignRightShift-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AssignRightShift-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor AssignLeftShift-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AssignLeftShift-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AssignLeftShift-2(sibling-uris|lang, partition, unique*, uri*) =
    ?AssignLeftShift(_, _) 
  ; (AssignLeftShift-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AssignLeftShift(
      specific-collect-LHS(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(AssignLeftShift-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AssignLeftShift-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AssignLeftShift-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor AssignMinus-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AssignMinus-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AssignMinus-2(sibling-uris|lang, partition, unique*, uri*) =
    ?AssignMinus(_, _) 
  ; (AssignMinus-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AssignMinus(
      specific-collect-LHS(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(AssignMinus-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AssignMinus-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AssignMinus-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor AssignPlus-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AssignPlus-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AssignPlus-2(sibling-uris|lang, partition, unique*, uri*) =
    ?AssignPlus(_, _) 
  ; (AssignPlus-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AssignPlus(
      specific-collect-LHS(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(AssignPlus-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AssignPlus-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AssignPlus-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor AssignMod-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AssignMod-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AssignMod-2(sibling-uris|lang, partition, unique*, uri*) =
    ?AssignMod(_, _) 
  ; (AssignMod-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AssignMod(
      specific-collect-LHS(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(AssignMod-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AssignMod-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AssignMod-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor AssignDiv-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AssignDiv-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AssignDiv-2(sibling-uris|lang, partition, unique*, uri*) =
    ?AssignDiv(_, _) 
  ; (AssignDiv-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AssignDiv(
      specific-collect-LHS(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(AssignDiv-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AssignDiv-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AssignDiv-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor AssignMul-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AssignMul-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AssignMul-2(sibling-uris|lang, partition, unique*, uri*) =
    ?AssignMul(_, _) 
  ; (AssignMul-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AssignMul(
      specific-collect-LHS(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(AssignMul-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AssignMul-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AssignMul-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Assign-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Assign-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Assign-2(sibling-uris|lang, partition, unique*, uri*) =
    ?Assign(_, _) 
  ; (Assign-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Assign(
      specific-collect-LHS(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(Assign-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Assign-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Assign-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Cond-3, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Cond-3(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Cond-3(sibling-uris|lang, partition, unique*, uri*) =
    ?Cond(_, _, _) 
  ; (Cond-3-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Cond(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-CondMid(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-collect-Expr(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*)
    ))
  ; try(Cond-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Cond-3-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Cond-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Or-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Or-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Or-2(sibling-uris|lang, partition, unique*, uri*) =
    ?Or(_, _) 
  ; (Or-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Or(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(Or-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Or-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Or-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor ExcOr-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ExcOr-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ExcOr-2(sibling-uris|lang, partition, unique*, uri*) =
    ?ExcOr(_, _) 
  ; (ExcOr-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ExcOr(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(ExcOr-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ExcOr-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ExcOr-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor And-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-And-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-And-2(sibling-uris|lang, partition, unique*, uri*) =
    ?And(_, _) 
  ; (And-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(And(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(And-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  And-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  And-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor LazyOr-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-LazyOr-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-LazyOr-2(sibling-uris|lang, partition, unique*, uri*) =
    ?LazyOr(_, _) 
  ; (LazyOr-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(LazyOr(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(LazyOr-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  LazyOr-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  LazyOr-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor LazyAnd-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-LazyAnd-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-LazyAnd-2(sibling-uris|lang, partition, unique*, uri*) =
    ?LazyAnd(_, _) 
  ; (LazyAnd-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(LazyAnd(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(LazyAnd-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  LazyAnd-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  LazyAnd-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor NotEq-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-NotEq-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-NotEq-2(sibling-uris|lang, partition, unique*, uri*) =
    ?NotEq(_, _) 
  ; (NotEq-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(NotEq(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(NotEq-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  NotEq-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  NotEq-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Eq-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Eq-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Eq-2(sibling-uris|lang, partition, unique*, uri*) =
    ?Eq(_, _) 
  ; (Eq-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Eq(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(Eq-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Eq-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Eq-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor GtEq-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-GtEq-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-GtEq-2(sibling-uris|lang, partition, unique*, uri*) =
    ?GtEq(_, _) 
  ; (GtEq-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(GtEq(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(GtEq-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  GtEq-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  GtEq-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor LtEq-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-LtEq-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-LtEq-2(sibling-uris|lang, partition, unique*, uri*) =
    ?LtEq(_, _) 
  ; (LtEq-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(LtEq(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(LtEq-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  LtEq-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  LtEq-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Gt-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Gt-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Gt-2(sibling-uris|lang, partition, unique*, uri*) =
    ?Gt(_, _) 
  ; (Gt-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Gt(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(Gt-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Gt-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Gt-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Lt-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Lt-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Lt-2(sibling-uris|lang, partition, unique*, uri*) =
    ?Lt(_, _) 
  ; (Lt-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Lt(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(Lt-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Lt-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Lt-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor URightShift-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-URightShift-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-URightShift-2(sibling-uris|lang, partition, unique*, uri*) =
    ?URightShift(_, _) 
  ; (URightShift-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(URightShift(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(URightShift-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  URightShift-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  URightShift-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor RightShift-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-RightShift-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-RightShift-2(sibling-uris|lang, partition, unique*, uri*) =
    ?RightShift(_, _) 
  ; (RightShift-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(RightShift(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(RightShift-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  RightShift-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  RightShift-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor LeftShift-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-LeftShift-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-LeftShift-2(sibling-uris|lang, partition, unique*, uri*) =
    ?LeftShift(_, _) 
  ; (LeftShift-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(LeftShift(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(LeftShift-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  LeftShift-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  LeftShift-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Minus-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Minus-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Minus-2(sibling-uris|lang, partition, unique*, uri*) =
    ?Minus(_, _) 
  ; (Minus-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Minus(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(Minus-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Minus-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Minus-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Plus-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Plus-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Plus-2(sibling-uris|lang, partition, unique*, uri*) =
    ?Plus(_, _) 
  ; (Plus-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Plus(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(Plus-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Plus-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Plus-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Mod-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Mod-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Mod-2(sibling-uris|lang, partition, unique*, uri*) =
    ?Mod(_, _) 
  ; (Mod-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Mod(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(Mod-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Mod-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Mod-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Div-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Div-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Div-2(sibling-uris|lang, partition, unique*, uri*) =
    ?Div(_, _) 
  ; (Div-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Div(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(Div-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Div-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Div-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Mul-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Mul-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Mul-2(sibling-uris|lang, partition, unique*, uri*) =
    ?Mul(_, _) 
  ; (Mul-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Mul(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(Mul-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Mul-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Mul-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor InstanceOf-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InstanceOf-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InstanceOf-2(sibling-uris|lang, partition, unique*, uri*) =
    ?InstanceOf(_, _) 
  ; (InstanceOf-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(InstanceOf(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-RefType(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(InstanceOf-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  InstanceOf-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  InstanceOf-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor CastRef-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-CastRef-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-CastRef-2(sibling-uris|lang, partition, unique*, uri*) =
    ?CastRef(_, _) 
  ; (CastRef-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(CastRef(
      specific-collect-RefType(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(CastRef-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  CastRef-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  CastRef-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor CastPrim-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-CastPrim-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-CastPrim-2(sibling-uris|lang, partition, unique*, uri*) =
    ?CastPrim(_, _) 
  ; (CastPrim-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(CastPrim(
      specific-collect-PrimType(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Expr(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(CastPrim-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  CastPrim-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  CastPrim-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Not-1, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Not-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Not-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Not(_) 
  ; (Not-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Not(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Not-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Not-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Not-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Complement-1, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Complement-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Complement-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Complement(_) 
  ; (Complement-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Complement(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Complement-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Complement-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Complement-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor PreDecr-1, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PreDecr-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PreDecr-1(sibling-uris|lang, partition, unique*, uri*) =
    ?PreDecr(_) 
  ; (PreDecr-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(PreDecr(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(PreDecr-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  PreDecr-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  PreDecr-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor PreIncr-1, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PreIncr-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PreIncr-1(sibling-uris|lang, partition, unique*, uri*) =
    ?PreIncr(_) 
  ; (PreIncr-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(PreIncr(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(PreIncr-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  PreIncr-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  PreIncr-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Minus-1, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Minus-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Minus-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Minus(_) 
  ; (Minus-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Minus(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Minus-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Minus-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Minus-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Plus-1, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Plus-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Plus-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Plus(_) 
  ; (Plus-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Plus(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Plus-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Plus-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Plus-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor PostDecr-1, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PostDecr-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PostDecr-1(sibling-uris|lang, partition, unique*, uri*) =
    ?PostDecr(_) 
  ; (PostDecr-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(PostDecr(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(PostDecr-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  PostDecr-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  PostDecr-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor PostIncr-1, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PostIncr-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PostIncr-1(sibling-uris|lang, partition, unique*, uri*) =
    ?PostIncr(_) 
  ; (PostIncr-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(PostIncr(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(PostIncr-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  PostIncr-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  PostIncr-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort Expr, injected into ExprName
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ExprName(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor Invoke-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Invoke-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Invoke-2(sibling-uris|lang, partition, unique*, uri*) =
    ?Invoke(_, _) 
  ; (Invoke-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Invoke(
      specific-collect-MethodSpec(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-MethodArgs(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(Invoke-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Invoke-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Invoke-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort Expr, injected into ArrayAccess
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ArrayAccess(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Expr, injected into FieldAccess
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FieldAccess(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Expr, injected into ArrayCreationExpr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ArrayCreationExpr(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor QThis-1, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-QThis-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-QThis-1(sibling-uris|lang, partition, unique*, uri*) =
    ?QThis(_) 
  ; (QThis-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(QThis(
      specific-collect-TypeName(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(QThis-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  QThis-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  QThis-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor This-0, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-This-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-This-0(sibling-uris|lang, partition, unique*, uri*) =
    ?This() 
  ; (This-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(This-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  This-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  This-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor PackageOrTypeName-2, Sort PackageOrTypeName
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PackageOrTypeName(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PackageOrTypeName(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PackageOrTypeName-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PackageOrTypeName-2(sibling-uris|lang, partition, unique*, uri*) =
    ?PackageOrTypeName(_, _) 
  ; (PackageOrTypeName-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(PackageOrTypeName(
      specific-collect-PackageOrTypeName(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-ID(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(PackageOrTypeName-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  PackageOrTypeName-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  PackageOrTypeName-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor PackageOrTypeName-1, Sort PackageOrTypeName
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PackageOrTypeName(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PackageOrTypeName(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PackageOrTypeName-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PackageOrTypeName-1(sibling-uris|lang, partition, unique*, uri*) =
    ?PackageOrTypeName(_) 
  ; (PackageOrTypeName-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(PackageOrTypeName(
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(PackageOrTypeName-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  PackageOrTypeName-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  PackageOrTypeName-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor MethodName-2, Sort MethodName
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodName(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodName(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodName-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodName-2(sibling-uris|lang, partition, unique*, uri*) =
    ?MethodName(_, _) 
  ; (MethodName-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(MethodName(
      specific-collect-AmbName(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-ID(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(MethodName-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  MethodName-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  MethodName-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor MethodName-1, Sort MethodName
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodName(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodName(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodName-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodName-1(sibling-uris|lang, partition, unique*, uri*) =
    ?MethodName(_) 
  ; (MethodName-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(MethodName(
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(MethodName-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  MethodName-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  MethodName-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor ExprName-2, Sort ExprName
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ExprName(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ExprName(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ExprName-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ExprName-2(sibling-uris|lang, partition, unique*, uri*) =
    ?ExprName(_, _) 
  ; (ExprName-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ExprName(
      specific-collect-AmbName(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-ID(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(ExprName-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ExprName-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ExprName-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor ExprName-1, Sort ExprName
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ExprName(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ExprName(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ExprName-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ExprName-1(sibling-uris|lang, partition, unique*, uri*) =
    ?ExprName(_) 
  ; (ExprName-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ExprName(
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(ExprName-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ExprName-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ExprName-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor TypeName-2, Sort TypeName
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeName(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeName(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeName-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeName-2(sibling-uris|lang, partition, unique*, uri*) =
    ?TypeName(_, _) 
  ; (TypeName-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(TypeName(
      specific-collect-PackageOrTypeName(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-ID(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(TypeName-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  TypeName-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  TypeName-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor TypeName-1, Sort TypeName
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeName(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeName(sibling-uris|lang, partition, unique*, uri*) = specific-collect-TypeName-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-TypeName-1(sibling-uris|lang, partition, unique*, uri*) =
    ?TypeName(_) 
  ; (TypeName-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(TypeName(
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(TypeName-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  TypeName-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  TypeName-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor AmbName-2, Sort AmbName
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AmbName(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AmbName(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AmbName-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AmbName-2(sibling-uris|lang, partition, unique*, uri*) =
    ?AmbName(_, _) 
  ; (AmbName-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AmbName(
      specific-collect-AmbName(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-ID(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(AmbName-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AmbName-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AmbName-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor AmbName-1, Sort AmbName
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AmbName(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AmbName(sibling-uris|lang, partition, unique*, uri*) = specific-collect-AmbName-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-AmbName-1(sibling-uris|lang, partition, unique*, uri*) =
    ?AmbName(_) 
  ; (AmbName-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(AmbName(
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(AmbName-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  AmbName-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  AmbName-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Null-0, Sort NullLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-NullLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-NullLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Null-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Null-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Null() 
  ; (Null-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Null-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Null-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Null-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort StringChars, injected into String
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-StringChars(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-StringChars(sibling-uris|lang, partition, unique*, uri*) = specific-collect-String(sibling-uris|lang, partition, unique*, uri*)

rules // Sort StringPart, injected into EscapeSeq
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-StringPart(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-StringPart(sibling-uris|lang, partition, unique*, uri*) = specific-collect-EscapeSeq(sibling-uris|lang, partition, unique*, uri*)

rules // Sort StringPart, injected into UnicodeEscape
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-StringPart(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-StringPart(sibling-uris|lang, partition, unique*, uri*) = specific-collect-UnicodeEscape(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor Chars-1, Sort StringPart
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-StringPart(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-StringPart(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Chars-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Chars-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Chars(_) 
  ; (Chars-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Chars(
      specific-collect-StringChars(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Chars-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Chars-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Chars-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor String-1, Sort StringLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-StringLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-StringLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-String-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-String-1(sibling-uris|lang, partition, unique*, uri*) =
    ?String(_) 
  ; (String-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(String(
      specific-siblings-list-StringPart(|lang, partition, unique*, child-uri*)
    ))
  ; try(String-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  String-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  String-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort SingleChar, injected into Int
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-SingleChar(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-SingleChar(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Int(sibling-uris|lang, partition, unique*, uri*)

rules // Sort CharContent, injected into EscapeSeq
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-CharContent(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-CharContent(sibling-uris|lang, partition, unique*, uri*) = specific-collect-EscapeSeq(sibling-uris|lang, partition, unique*, uri*)

rules // Sort CharContent, injected into UnicodeEscape
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-CharContent(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-CharContent(sibling-uris|lang, partition, unique*, uri*) = specific-collect-UnicodeEscape(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor Single-1, Sort CharContent
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-CharContent(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-CharContent(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Single-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Single-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Single(_) 
  ; (Single-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Single(
      specific-collect-SingleChar(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Single-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Single-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Single-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Char-1, Sort CharLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-CharLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-CharLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Char-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Char-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Char(_) 
  ; (Char-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Char(
      specific-collect-CharContent(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Char-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Char-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Char-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort LastOcta, injected into Int
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-LastOcta(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-LastOcta(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Int(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor OctaEscape3-3, Sort OctaEscape
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-OctaEscape(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-OctaEscape(sibling-uris|lang, partition, unique*, uri*) = specific-collect-OctaEscape3-3(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-OctaEscape3-3(sibling-uris|lang, partition, unique*, uri*) =
    ?OctaEscape3(_, _, _) 
  ; (OctaEscape3-3-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(OctaEscape3(
      specific-collect-Int(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Int(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-collect-Int(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*)
    ))
  ; try(OctaEscape3-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  OctaEscape3-3-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  OctaEscape3-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor OctaEscape2-2, Sort OctaEscape
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-OctaEscape(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-OctaEscape(sibling-uris|lang, partition, unique*, uri*) = specific-collect-OctaEscape2-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-OctaEscape2-2(sibling-uris|lang, partition, unique*, uri*) =
    ?OctaEscape2(_, _) 
  ; (OctaEscape2-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(OctaEscape2(
      specific-collect-Int(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Int(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(OctaEscape2-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  OctaEscape2-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  OctaEscape2-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor OctaEscape2-2, Sort OctaEscape
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-OctaEscape(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-OctaEscape(sibling-uris|lang, partition, unique*, uri*) = specific-collect-OctaEscape2-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-OctaEscape2-2(sibling-uris|lang, partition, unique*, uri*) =
    ?OctaEscape2(_, _) 
  ; (OctaEscape2-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(OctaEscape2(
      specific-collect-Int(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-LastOcta(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(OctaEscape2-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  OctaEscape2-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  OctaEscape2-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor OctaEscape1-1, Sort OctaEscape
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-OctaEscape(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-OctaEscape(sibling-uris|lang, partition, unique*, uri*) = specific-collect-OctaEscape1-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-OctaEscape1-1(sibling-uris|lang, partition, unique*, uri*) =
    ?OctaEscape1(_) 
  ; (OctaEscape1-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(OctaEscape1(
      specific-collect-LastOcta(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(OctaEscape1-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  OctaEscape1-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  OctaEscape1-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor NamedEscape-1, Sort NamedEscape
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-NamedEscape(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-NamedEscape(sibling-uris|lang, partition, unique*, uri*) = specific-collect-NamedEscape-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-NamedEscape-1(sibling-uris|lang, partition, unique*, uri*) =
    ?NamedEscape(_) 
  ; (NamedEscape-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(NamedEscape(
      specific-collect-Int(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(NamedEscape-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  NamedEscape-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  NamedEscape-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort EscapeSeq, injected into NamedEscape
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-EscapeSeq(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-EscapeSeq(sibling-uris|lang, partition, unique*, uri*) = specific-collect-NamedEscape(sibling-uris|lang, partition, unique*, uri*)

rules // Sort EscapeSeq, injected into OctaEscape
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-EscapeSeq(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-EscapeSeq(sibling-uris|lang, partition, unique*, uri*) = specific-collect-OctaEscape(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor False-0, Sort Bool
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Bool(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Bool(sibling-uris|lang, partition, unique*, uri*) = specific-collect-False-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-False-0(sibling-uris|lang, partition, unique*, uri*) =
    ?False() 
  ; (False-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(False-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  False-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  False-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor True-0, Sort Bool
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Bool(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Bool(sibling-uris|lang, partition, unique*, uri*) = specific-collect-True-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-True-0(sibling-uris|lang, partition, unique*, uri*) =
    ?True() 
  ; (True-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(True-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  True-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  True-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Bool-1, Sort BoolLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-BoolLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-BoolLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Bool-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Bool-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Bool(_) 
  ; (Bool-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Bool(
      specific-collect-Bool(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Bool-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Bool-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Bool-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Double-1, Sort FloatLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FloatLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FloatLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Double-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Double-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Double(_) 
  ; (Double-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Double(
      specific-collect-HexaDoubleLiteral(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Double-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Double-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Double-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Double-1, Sort FloatLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FloatLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FloatLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Double-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Double-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Double(_) 
  ; (Double-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Double(
      specific-collect-DeciDoubleLiteral(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Double-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Double-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Double-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Float-1, Sort FloatLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FloatLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FloatLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Float-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Float-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Float(_) 
  ; (Float-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Float(
      specific-collect-HexaFloatLiteral(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Float-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Float-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Float-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Float-1, Sort FloatLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FloatLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FloatLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Float-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Float-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Float(_) 
  ; (Float-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Float(
      specific-collect-DeciFloatLiteral(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Float-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Float-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Float-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort HexaDoubleLiteral, injected into String
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-HexaDoubleLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-HexaDoubleLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-String(sibling-uris|lang, partition, unique*, uri*)

rules // Sort DeciDoubleLiteral, injected into String
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-DeciDoubleLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-DeciDoubleLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-String(sibling-uris|lang, partition, unique*, uri*)

rules // Sort HexaFloatLiteral, injected into String
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-HexaFloatLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-HexaFloatLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-String(sibling-uris|lang, partition, unique*, uri*)

rules // Sort DeciFloatLiteral, injected into String
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-DeciFloatLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-DeciFloatLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-String(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor Octa-1, Sort IntLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-IntLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-IntLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Octa-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Octa-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Octa(_) 
  ; (Octa-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Octa(
      specific-collect-OctaLiteral(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Octa-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Octa-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Octa-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Hexa-1, Sort IntLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-IntLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-IntLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Hexa-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Hexa-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Hexa(_) 
  ; (Hexa-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Hexa(
      specific-collect-HexaLiteral(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Hexa-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Hexa-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Hexa-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Deci-1, Sort IntLiteral
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-IntLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-IntLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Deci-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Deci-1(sibling-uris|lang, partition, unique*, uri*) =
    ?Deci(_) 
  ; (Deci-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Deci(
      specific-collect-DeciLiteral(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(Deci-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Deci-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Deci-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort OctaLiteral, injected into String
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-OctaLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-OctaLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-String(sibling-uris|lang, partition, unique*, uri*)

rules // Sort HexaLiteral, injected into String
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-HexaLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-HexaLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-String(sibling-uris|lang, partition, unique*, uri*)

rules // Sort DeciLiteral, injected into String
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-DeciLiteral(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-DeciLiteral(sibling-uris|lang, partition, unique*, uri*) = specific-collect-String(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor StrictFP-0, Sort StrictFP
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-StrictFP(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-StrictFP(sibling-uris|lang, partition, unique*, uri*) = specific-collect-StrictFP-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-StrictFP-0(sibling-uris|lang, partition, unique*, uri*) =
    ?StrictFP() 
  ; (StrictFP-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(StrictFP-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  StrictFP-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  StrictFP-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Synchronized-0, Sort Synchronized
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Synchronized(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Synchronized(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Synchronized-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Synchronized-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Synchronized() 
  ; (Synchronized-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Synchronized-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Synchronized-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Synchronized-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Volatile-0, Sort Volatile
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Volatile(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Volatile(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Volatile-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Volatile-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Volatile() 
  ; (Volatile-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Volatile-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Volatile-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Volatile-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Transient-0, Sort Transient
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Transient(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Transient(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Transient-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Transient-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Transient() 
  ; (Transient-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Transient-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Transient-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Transient-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Native-0, Sort Native
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Native(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Native(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Native-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Native-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Native() 
  ; (Native-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Native-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Native-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Native-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Static-0, Sort Static
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Static(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Static(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Static-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Static-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Static() 
  ; (Static-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Static-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Static-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Static-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Final-0, Sort Final
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Final(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Final(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Final-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Final-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Final() 
  ; (Final-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Final-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Final-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Final-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Abstract-0, Sort Abstract
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Abstract(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Abstract(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Abstract-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Abstract-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Abstract() 
  ; (Abstract-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Abstract-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Abstract-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Abstract-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Protected-0, Sort Protected
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Protected(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Protected(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Protected-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Protected-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Protected() 
  ; (Protected-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Protected-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Protected-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Protected-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Private-0, Sort Private
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Private(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Private(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Private-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Private-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Private() 
  ; (Private-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Private-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Private-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Private-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Public-0, Sort Public
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Public(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Public(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Public-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Public-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Public() 
  ; (Public-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Public-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Public-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Public-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort ID, injected into String
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ID(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ID(sibling-uris|lang, partition, unique*, uri*) = specific-collect-String(sibling-uris|lang, partition, unique*, uri*)

rules // Sort UnicodeEscape, injected into String
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-UnicodeEscape(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-UnicodeEscape(sibling-uris|lang, partition, unique*, uri*) = specific-collect-String(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor Public-0, Sort Access
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Access(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Access(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Public-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Public-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Public() 
  ; (Public-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Public-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Public-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Public-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Private-0, Sort Access
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Access(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Access(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Private-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Private-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Private() 
  ; (Private-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Private-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Private-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Private-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Protected-0, Sort Access
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Access(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Access(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Protected-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Protected-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Protected() 
  ; (Protected-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Protected-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Protected-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Protected-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Default-0, Sort Access
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Access(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Access(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Default-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Default-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Default() 
  ; (Default-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Default-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Default-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Default-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Static-0, Sort Context
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Context(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Context(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Static-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Static-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Static() 
  ; (Static-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Static-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Static-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Static-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Instance-0, Sort Context
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Context(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Context(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Instance-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Instance-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Instance() 
  ; (Instance-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Instance-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Instance-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Instance-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor ClassDec-8, Sort ClassDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ClassDec-8(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ClassDec-8(sibling-uris|lang, partition, unique*, uri*) =
    ?ClassDec(_, _, _, _, _, _, _, _) 
  ; (ClassDec-8-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ClassDec(
      specific-collect-Access(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Context(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-siblings-list-ClassMod(|lang, partition, unique*, child-uri*), 
      specific-collect-ID(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*), 
      specific-siblings-option-TypeParams(?sibling-uri-3*|lang, partition, unique*, sibling-uri-2*), 
      specific-collect-Super(?sibling-uri-4*|lang, partition, unique*, sibling-uri-3*), 
      specific-siblings-list-ImplementsDec(|lang, partition, unique*, child-uri*), 
      specific-collect-ClassBody(?sibling-uri-5*|lang, partition, unique*, sibling-uri-4*)
    ))
  ; try(ClassDec-8-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ClassDec-8-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ClassDec-8-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor ImplementsDec-2, Sort ImplementsDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ImplementsDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ImplementsDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ImplementsDec-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ImplementsDec-2(sibling-uris|lang, partition, unique*, uri*) =
    ?ImplementsDec(_, _) 
  ; (ImplementsDec-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ImplementsDec(
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-InterfaceType(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(ImplementsDec-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ImplementsDec-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ImplementsDec-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor FieldDec-5, Sort FieldDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FieldDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FieldDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FieldDec-5(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FieldDec-5(sibling-uris|lang, partition, unique*, uri*) =
    ?FieldDec(_, _, _, _, _) 
  ; (FieldDec-5-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(FieldDec(
      specific-collect-Access(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Context(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-siblings-list-FieldMod(|lang, partition, unique*, child-uri*), 
      specific-collect-Type(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*), 
      specific-collect-VarDec(?sibling-uri-3*|lang, partition, unique*, sibling-uri-2*)
    ))
  ; try(FieldDec-5-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  FieldDec-5-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  FieldDec-5-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor MethodDec-9, Sort MethodDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-MethodDec-9(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-MethodDec-9(sibling-uris|lang, partition, unique*, uri*) =
    ?MethodDec(_, _, _, _, _, _, _, _, _) 
  ; (MethodDec-9-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(MethodDec(
      specific-collect-Access(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Context(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-siblings-list-MethodMod(|lang, partition, unique*, child-uri*), 
      specific-siblings-option-TypeParams(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*), 
      specific-collect-ResultType(?sibling-uri-3*|lang, partition, unique*, sibling-uri-2*), 
      specific-collect-ID(?sibling-uri-4*|lang, partition, unique*, sibling-uri-3*), 
      specific-collect-MethodParams(?sibling-uri-5*|lang, partition, unique*, sibling-uri-4*), 
      specific-siblings-option-Throws(?sibling-uri-6*|lang, partition, unique*, sibling-uri-5*), 
      specific-collect-MethodBody(?sibling-uri-7*|lang, partition, unique*, sibling-uri-6*)
    ))
  ; try(MethodDec-9-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  MethodDec-9-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  MethodDec-9-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor ConstrDec-7, Sort ConstrDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstrDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ConstrDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstrDec-7(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ConstrDec-7(sibling-uris|lang, partition, unique*, uri*) =
    ?ConstrDec(_, _, _, _, _, _, _) 
  ; (ConstrDec-7-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ConstrDec(
      specific-collect-Access(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-list-ConstrMod(|lang, partition, unique*, child-uri*), 
      specific-siblings-option-TypeParams(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-collect-ID(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*), 
      specific-siblings-list-FormalParam(|lang, partition, unique*, child-uri*), 
      specific-siblings-option-Throws(?sibling-uri-3*|lang, partition, unique*, sibling-uri-2*), 
      specific-collect-ConstrBody(?sibling-uri-4*|lang, partition, unique*, sibling-uri-3*)
    ))
  ; try(ConstrDec-7-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ConstrDec-7-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ConstrDec-7-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor ConstrBody-1, Sort ConstrBody
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstrBody(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ConstrBody(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstrBody-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ConstrBody-1(sibling-uris|lang, partition, unique*, uri*) =
    ?ConstrBody(_) 
  ; (ConstrBody-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ConstrBody(
      specific-siblings-list-BlockStm(|lang, partition, unique*, child-uri*)
    ))
  ; try(ConstrBody-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ConstrBody-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ConstrBody-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor InterfaceDec-6, Sort InterfaceDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InterfaceDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-InterfaceDec-6(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-InterfaceDec-6(sibling-uris|lang, partition, unique*, uri*) =
    ?InterfaceDec(_, _, _, _, _, _) 
  ; (InterfaceDec-6-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(InterfaceDec(
      specific-collect-Access(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-list-InterfaceMod(|lang, partition, unique*, child-uri*), 
      specific-collect-ID(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-siblings-option-TypeParams(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*), 
      specific-siblings-list-ExtendsInterface(|lang, partition, unique*, child-uri*), 
      specific-siblings-list-InterfaceMemberDec(|lang, partition, unique*, child-uri*)
    ))
  ; try(InterfaceDec-6-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  InterfaceDec-6-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  InterfaceDec-6-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor ExtendsInterfaces-2, Sort ExtendsInterface
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ExtendsInterface(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ExtendsInterface(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ExtendsInterfaces-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ExtendsInterfaces-2(sibling-uris|lang, partition, unique*, uri*) =
    ?ExtendsInterfaces(_, _) 
  ; (ExtendsInterfaces-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ExtendsInterfaces(
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-InterfaceType(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(ExtendsInterfaces-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ExtendsInterfaces-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ExtendsInterfaces-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor ConstantDec-2, Sort ConstantDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstantDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ConstantDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ConstantDec-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ConstantDec-2(sibling-uris|lang, partition, unique*, uri*) =
    ?ConstantDec(_, _) 
  ; (ConstantDec-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(ConstantDec(
      specific-collect-Type(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-VarDec(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(ConstantDec-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  ConstantDec-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  ConstantDec-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor NewArray-2, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-NewArray-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-NewArray-2(sibling-uris|lang, partition, unique*, uri*) =
    ?NewArray(_, _) 
  ; (NewArray-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(NewArray(
      specific-collect-ArrayBaseType(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-list-Dim(|lang, partition, unique*, child-uri*)
    ))
  ; try(NewArray-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  NewArray-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  NewArray-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor NewInstance-5, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-NewInstance-5(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-NewInstance-5(sibling-uris|lang, partition, unique*, uri*) =
    ?NewInstance(_, _, _, _, _) 
  ; (NewInstance-5-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(NewInstance(
      specific-siblings-option-TypeArgs(?sibling-uri-0*|lang, partition, unique*, uri*), 
      specific-collect-ClassOrInterfaceType(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-collect-ClassOrInterfaceType(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*), 
      specific-siblings-list-Expr(|lang, partition, unique*, child-uri*), 
      specific-siblings-option-ClassBody(?sibling-uri-3*|lang, partition, unique*, sibling-uri-2*)
    ))
  ; try(NewInstance-5-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  NewInstance-5-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  NewInstance-5-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor QNewInstance-7, Sort Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-QNewInstance-7(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-QNewInstance-7(sibling-uris|lang, partition, unique*, uri*) =
    ?QNewInstance(_, _, _, _, _, _, _) 
  ; (QNewInstance-7-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(QNewInstance(
      specific-collect-Expr(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-option-TypeArgs(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-collect-ID(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*), 
      specific-collect-ID(?sibling-uri-3*|lang, partition, unique*, sibling-uri-2*), 
      specific-collect-TypeArgs(?sibling-uri-4*|lang, partition, unique*, sibling-uri-3*), 
      specific-siblings-list-Expr(|lang, partition, unique*, child-uri*), 
      specific-siblings-option-ClassBody(?sibling-uri-5*|lang, partition, unique*, sibling-uri-4*)
    ))
  ; try(QNewInstance-7-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  QNewInstance-7-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  QNewInstance-7-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor CompilationUnit-3, Sort CompilationUnit
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-CompilationUnit(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-CompilationUnit(sibling-uris|lang, partition, unique*, uri*) = specific-collect-CompilationUnit-3(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-CompilationUnit-3(sibling-uris|lang, partition, unique*, uri*) =
    ?CompilationUnit(_, _, _) 
  ; (CompilationUnit-3-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(CompilationUnit(
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-list-ImportDec(|lang, partition, unique*, child-uri*), 
      specific-collect-PackageDec(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(CompilationUnit-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  CompilationUnit-3-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  CompilationUnit-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor DefaultPackageDec-2, Sort PackageDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PackageDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PackageDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-DefaultPackageDec-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-DefaultPackageDec-2(sibling-uris|lang, partition, unique*, uri*) =
    ?DefaultPackageDec(_, _) 
  ; (DefaultPackageDec-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(DefaultPackageDec(
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-PackageDec(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(DefaultPackageDec-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  DefaultPackageDec-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  DefaultPackageDec-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor DefaultPackageDec-3, Sort PackageDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PackageDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PackageDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-DefaultPackageDec-3(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-DefaultPackageDec-3(sibling-uris|lang, partition, unique*, uri*) =
    ?DefaultPackageDec(_, _, _) 
  ; (DefaultPackageDec-3-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(DefaultPackageDec(
      specific-siblings-list-Anno(|lang, partition, unique*, child-uri*), 
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-list-TypeDec(|lang, partition, unique*, child-uri*)
    ))
  ; try(DefaultPackageDec-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  DefaultPackageDec-3-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  DefaultPackageDec-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor PackageDec-2, Sort PackageDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PackageDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PackageDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PackageDec-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PackageDec-2(sibling-uris|lang, partition, unique*, uri*) =
    ?PackageDec(_, _) 
  ; (PackageDec-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(PackageDec(
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-PackageDec(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(PackageDec-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  PackageDec-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  PackageDec-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor PackageDec-3, Sort PackageDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PackageDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PackageDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PackageDec-3(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PackageDec-3(sibling-uris|lang, partition, unique*, uri*) =
    ?PackageDec(_, _, _) 
  ; (PackageDec-3-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(PackageDec(
      specific-siblings-list-Anno(|lang, partition, unique*, child-uri*), 
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-list-TypeDec(|lang, partition, unique*, child-uri*)
    ))
  ; try(PackageDec-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  PackageDec-3-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  PackageDec-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor DefaultPackageName-1, Sort PackageName
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PackageName(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PackageName(sibling-uris|lang, partition, unique*, uri*) = specific-collect-DefaultPackageName-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-DefaultPackageName-1(sibling-uris|lang, partition, unique*, uri*) =
    ?DefaultPackageName(_) 
  ; (DefaultPackageName-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(DefaultPackageName(
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(DefaultPackageName-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  DefaultPackageName-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  DefaultPackageName-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor PackageName-1, Sort PackageName
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PackageName(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PackageName(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PackageName-1(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PackageName-1(sibling-uris|lang, partition, unique*, uri*) =
    ?PackageName(_) 
  ; (PackageName-1-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(PackageName(
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*)
    ))
  ; try(PackageName-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  PackageName-1-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  PackageName-1-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor PackageName-2, Sort PackageName
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PackageName(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PackageName(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PackageName-2(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PackageName-2(sibling-uris|lang, partition, unique*, uri*) =
    ?PackageName(_, _) 
  ; (PackageName-2-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(PackageName(
      specific-collect-PackageName(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-ID(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*)
    ))
  ; try(PackageName-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  PackageName-2-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  PackageName-2-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Default-0, Sort ID
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-ID(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-ID(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Default-0(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Default-0(sibling-uris|lang, partition, unique*, uri*) =
    ?Default() 
  ; (Default-0-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  
  ; try(Default-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Default-0-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Default-0-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Sort PackageOrTypeName, injected into PackageName
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PackageOrTypeName(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-PackageOrTypeName(sibling-uris|lang, partition, unique*, uri*) = specific-collect-PackageName(sibling-uris|lang, partition, unique*, uri*)

rules // Sort BlockStm, injected into LocalVarDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-BlockStm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-BlockStm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-LocalVarDec(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Stm, injected into Expr
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Stm(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)

rules // Sort Expr, injected into Literal
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Expr(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Literal(sibling-uris|lang, partition, unique*, uri*)

rules // Constructor LocalVarDec-4, Sort LocalVarDec
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-LocalVarDec(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-LocalVarDec(sibling-uris|lang, partition, unique*, uri*) = specific-collect-LocalVarDec-4(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-LocalVarDec-4(sibling-uris|lang, partition, unique*, uri*) =
    ?LocalVarDec(_, _, _, _) 
  ; (LocalVarDec-4-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(LocalVarDec(
      specific-siblings-list-Anno_VarMod0(|lang, partition, unique*, child-uri*), 
      specific-collect-Type(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-VarDec(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-collect-Int(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*)
    ))
  ; try(LocalVarDec-4-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  LocalVarDec-4-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  LocalVarDec-4-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor VarArityParam-4, Sort FormalParam
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FormalParam(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FormalParam(sibling-uris|lang, partition, unique*, uri*) = specific-collect-VarArityParam-4(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-VarArityParam-4(sibling-uris|lang, partition, unique*, uri*) =
    ?VarArityParam(_, _, _, _) 
  ; (VarArityParam-4-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(VarArityParam(
      specific-siblings-list-Anno_VarMod0(|lang, partition, unique*, child-uri*), 
      specific-collect-Type(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-VarDecId(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-collect-Int(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*)
    ))
  ; try(VarArityParam-4-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  VarArityParam-4-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  VarArityParam-4-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor Param-4, Sort FormalParam
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-FormalParam(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-FormalParam(sibling-uris|lang, partition, unique*, uri*) = specific-collect-Param-4(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-Param-4(sibling-uris|lang, partition, unique*, uri*) =
    ?Param(_, _, _, _) 
  ; (Param-4-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(Param(
      specific-siblings-list-Anno_VarMod0(|lang, partition, unique*, child-uri*), 
      specific-collect-Type(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-VarDecId(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-collect-Int(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*)
    ))
  ; try(Param-4-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  Param-4-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  Param-4-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor EnumDecHead-3, Sort EnumDecHead
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-EnumDecHead(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-EnumDecHead(sibling-uris|lang, partition, unique*, uri*) = specific-collect-EnumDecHead-3(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-EnumDecHead-3(sibling-uris|lang, partition, unique*, uri*) =
    ?EnumDecHead(_, _, _) 
  ; (EnumDecHead-3-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(EnumDecHead(
      specific-siblings-list-Anno_ClassMod0(|lang, partition, unique*, child-uri*), 
      specific-collect-ID(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-siblings-list-ExtendsInterface(|lang, partition, unique*, child-uri*)
    ))
  ; try(EnumDecHead-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  EnumDecHead-3-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  EnumDecHead-3-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

rules // Constructor UnicodeEscape-5, Sort UnicodeEscape
  generic-collect(sibling-uris|lang, partition, unique*, uri*) = specific-collect-UnicodeEscape(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-UnicodeEscape(sibling-uris|lang, partition, unique*, uri*) = specific-collect-UnicodeEscape-5(sibling-uris|lang, partition, unique*, uri*)
  specific-collect-UnicodeEscape-5(sibling-uris|lang, partition, unique*, uri*) =
    ?UnicodeEscape(_, _, _, _, _) 
  ; (UnicodeEscape-5-down(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|lang, partition, unique*, uri*) <+ spectrav-match-defaults(sibling-uris, ?implicit*, ?uri'*, ?child-uri*, ?state*|uri*))
  ; preserve-annotations-attachments(UnicodeEscape(
      specific-collect-String(?sibling-uri-0*|lang, partition, unique*, child-uri*), 
      specific-collect-Int(?sibling-uri-1*|lang, partition, unique*, sibling-uri-0*), 
      specific-collect-Int(?sibling-uri-2*|lang, partition, unique*, sibling-uri-1*), 
      specific-collect-Int(?sibling-uri-3*|lang, partition, unique*, sibling-uri-2*), 
      specific-collect-Int(?sibling-uri-4*|lang, partition, unique*, sibling-uri-3*)
    ))
  ; try(UnicodeEscape-5-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*))
  ; nabl-annotate-properties(|lang, partition, uri*, uri'*)
  UnicodeEscape-5-down(sibling-uris, implicits-up, uris-up, child-uris-up, states-up|lang, partition, unique*, uri*) = fail
  UnicodeEscape-5-up(|lang, partition, unique*, implicit*, uri*, uri'*, child-uri*, state*) = fail

