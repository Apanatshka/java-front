module spxjava

imports
  
  libstratego-lib
  libstratego-gpp
  libstratego-aterm

  include/Java
  editor/Java-Outliner
  
  lib/editor-common.generated
  lib/analysis/-
  lib/nabl/-
  lib/task/-
  lib/index/-
  lib/properties/-
  lib/types/-
  lib/relations/-
  pp
  desugar
  languages/Java-1.5/packages/trans/desugar
  names
  check
  types
  varids
  signatures.traversal

rules // Analysis
 
  editor-analyze = analysis-default-editor
  
  java-collector(sibling-uris|lang, partition, unique*, uri*): 
  	File(_) -> <specific-collect-File-1(sibling-uris|lang, partition, unique*, uri*)> 
  java-collector(sibling-uris|lang, partition, unique*, uri*):
  	Files(_) -> <specific-collect-Files-1(sibling-uris|lang, partition, unique*, uri*)> 
  
  // java-collector(sibling-uris|lang, partition, unique*, uri*) = nabl-collect(sibling-uris|lang, partition, unique*, uri*) 
  
  analysis-single-default-interface = 
  	analysis-single-default(desugar-top, java-collector, id, pp-message-top|<language>)
  analysis-multiple-default-interface = 
  	analysis-multiple-default(parse-file <+ !(), desugar-top, java-collector, id, pp-message-top|<language>, <project-path>)
  
  editor-save = analysis-save-default(|<language>)

rules // Editor services

  editor-resolve:
    (node, position, ast, path, project-path) -> <analysis-resolve(|<language>, project-path)> node

  editor-hover:
    (selected, position, ast, path, project-path) -> type
    where
      type := $[Type: [<hover-type <+ subterm-at(|0); hover-type <+ !"none"> selected]]

	hover-type = get-type; strip-annos; pp-message
	
  editor-complete:
    (node, position, ast, path, project-path) -> <analysis-propose-completions(|<language>, project-path)> ast

rules // Debugging
  
  debug-show-aterm:
    (selected, position, ast, path, project-path) -> (filename, selected)
    with
      filename := <guarantee-extension(|"aterm")> path

  debug-show-desugared:
    (selected, position, ast, path, project-path) -> (filename, <desugar-top> selected)
    with
      filename := <guarantee-extension(|"aterm")> path
      
  debug-show-analyzed:
    (selected, position, ast, path, project-path) -> (filename, selected)
    with
      filename := <guarantee-extension(|"analyzed.aterm")> path

	debug-index-project =
		analysis-debug-index-project(|<language>)
	debug-index-partition =
		analysis-debug-index-partition(|<language>)

	debug-task-project =
		analysis-debug-task-project(|<language>)
	debug-task-partition =
		analysis-debug-task-partition(|<language>)
	debug-task-selection =
		analysis-debug-task-selection(|<language>)
		
	debug-project =
		analysis-debug-project(|<language>)
	debug-partition =
		analysis-debug-partition(|<language>)
		
	debug-reanalyze = 
		analysis-debug-reanalyze(|<language>)

  // analysis-default-debug-interface(msg) = debug(msg)
  // analysis-default-debug-interface = debug
