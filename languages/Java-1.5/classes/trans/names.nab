module languages/Java-1.5/classes/trans/names

imports

  include/Java
  lib/nbl/-
  types
  names

namespaces

  Constructor Field Method Variable
  
properties

  ParameterTypes of Method      : List(Type)
  Throws         of Method      : Throws
  Modifiers      of Type        : List(ClassMod)
  Modifiers      of Enum        : List(ClassMod)
  Modifiers      of Constructor : List(ConstrMod)
  Modifiers      of Method      : List(MethodMod)
  Modifiers      of Field       : List(FieldMod)
  Modifiers      of Variable    : List(VarMod)

binding rules // Enums

  EnumDec(EnumDecHead(m, Id(e), _), _):
    defines Type e    // TODO: Should this be in a separate namespace?
      of Modifiers m
    scopes Field
  
  EnumConst(Id(e), _, _):
    defines Field e   // TODO: Should this be in a separate namespace?

binding rules // Types

  ClassDec(ClassDecHead(m, Id(c), _, _, _), _):
    defines Type c 
      of type Type(c)
      of Modifiers m
    // TODO: implicitly define: this, super.
    scopes Type, TypeParam, Constructor, Field, Method
    
  SuperDec(ClassType(TypeName(Id(c)), _)):
    imports
      Field, imported Field, 
      Method, imported Method
      from Type c
      // TODO: Import types?

  ImplementsDec(... InterfaceType(TypeName(Id(i)), _) ...):
    imports
      Field, imported Field, 
      Method, imported Method
      from Type i
      // TODO: Import types?

binding rules // Constructors

  ConstrDec(ConstrDecHead(m, _, Id(c), p*, th), _):
    defines Constructor c
      of ParameterTypes pt*
      of Throws th
      of Modifiers m
      where p* has type pt*
    // TODO: implicitly define: this, super. These have a different meaning than the class ones.
    scopes Variable

binding rules // Fields

  FieldDec(m, t, ... VarDec(Id(f)) ...):
    defines Field f 
      of type t
      of Modifiers m
    
  FieldDec(m, t, ... VarDec(Id(f), _) ...):
    defines Field f 
      of type t
      of Modifiers m
    
binding rules // Methods

  MethodDec(MethodDecHead(mod, _, t, Id(m), p*, th), _):
    defines Method m
      of type t
      of ParameterTypes pt*
      of Throws th
      of Modifiers mod
      where p* has type pt*
    scopes Variable
    
  MethodDec(DeprMethodDecHead(mod, _, t, Id(m), p*, _, th), _):
    defines Method m
      of type t
      of ParameterTypes pt*
      of Throws th
      of Modifiers mod
      where p* has type pt*
    scopes Variable
    
  Param(m, t, Id(p)):
    defines Variable p
      of type t
      of Modifiers m

  VarArityParam(m, t, Id(p)):
    defines Variable p
      of type t
      of Modifiers m
