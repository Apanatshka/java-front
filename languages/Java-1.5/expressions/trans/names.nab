module languages/Java-1.5/expressions/trans/names

imports

  include/Java
  lib/nbl/-
  types
  names

namespaces



binding rules // Method call

	todo -- add ALL the invokes --
	
  Invoke(Method(m), a*):
  	refers to best Method m 
      of conformant ParameterTypes pt*
  	  where a* has type pt*

	todo -- ta* is a Some/None --
  Invoke(Method(e, ta*, Id(m)), a*):
    refers to best Method m
      of conformant ParameterTypes pt*
      of conformant TypeParameters ta*
      in Type t
      where a* has type pt*
      where e has type t
  
  todo -- ta* is a Some/None --    
  Invoke(SuperMethod(ta*, Id(m)), a*):
    refers to best Method m
      of conformant ParameterTypes pt*
      of conformant TypeParameters ta*
      in Type t
      where a* has type pt*
      where super refers to Field "super"
      where super has type t
      
  todo -- ta* is a Some/None --    
  Invoke(QSuperMethod(t, ta*, Id(m)), a*):
    refers to best Method m
      of conformant ParameterTypes pt*
      of conformant TypeParameters ta*
      in Type t
      where a* has type pt*
  
  todo -- WTF does this do? --     
  Invoke(GenericMethod(amb, ta*, Id(m)), a*):
    refers to best Method m
      of conformant ParameterTypes pt*
      of conformant TypeParameters ta*
      in Type ??
      where a* has type pt*
  
binding rules // Field access

  Field(e, Id(f)):
  	refers to Field f
  	  in Type t
  	  where e has type t
  	  
binding rules // Class instantiation

	todo -- ta* is a Some/None --
	todo -- does ta* refer to type arguments for the constructor or the type? --
  NewInstance(ta*, c, a*, _):
    refers to best Constructor c 
      of conformant ParameterTypes pt*
      of conformant TypeParameters ta*
      in Type c
      where a* has type pt*

	todo -- ta1* and ta2* are a Some/None --
	todo -- does ta1* refer to type arguments for the constructor or the type? --
	todo -- does ta2* refer to type arguments for the constructor or the type? --
  QNewInstance(e, ta1*, Id(c), ta2*, a*, _):
  	refers to best Constructor c
  	  of conformant ParameterTypes pt*
  	  of conformant TypeParameters ta1* 
  	  in Type c
  	  in Type t
  	  where a* has type pt*
  	  where e has type t
