module languages/Java-1.5/interfaces/trans/names

imports

	languages/Java-1.5/classes/trans/names
	languages/Java-1.5/types/trans/names
  include/Java
  types
  desugar

properties

  modifiers of Type   : List(InterfaceMod)
  modifiers of Field  : List(ConstantMod)
  modifiers of Method : List(AbstractMethodMod)

binding rules // annotations
  
  AnnoDec(AnnoDecHead(m, a), _):
    defines Type a
      of type Type(a)
      of modifiers m
    scopes Type, Field, Method
  
  AnnoMethodDec(mod, t, m, _):
    defines Method m
      of type t
      of modifiers mod
    scopes Variable
  
  // TODO: desugar?
  // Anno(TypeName(a), [..., ElemValPair(f, _), ...]):
  Anno(TypeName(a), [ElemValPair(f, _)]):
  	refers to Field f in Type a
  
binding rules // Interfaces

  InterfaceDec(InterfaceDecHead(m, i, tp*, _), _):
    defines Type i
      of type Type(i)
      of modifiers m
      of type-parameters tp*
    scopes Type, TypeParam, Field, Method
  
  // TODO: desugar?
  // ExtendsInterfaces([..., i, ...]):
  ExtendsInterfaces([i]):
    imports
      Field, imported Field, 
      Method, imported Method
      from Type i
      
binding rules // Constants

	// TODO: desugar?
  // ConstantDec(m, t, [..., VarDec(c), ...]):
	ConstantDec(m, t, [VarDec(c)]):
    defines Field c
      of type t
      of modifiers m
      in subsequent scope

	// TODO: desugar?
  // ConstantDec(m, t,[..., VarDec(c, _), ...]):
  ConstantDec(m, t, [VarDec(c, _)]):
  	defines Field c
  	  of type t
  	  of modifiers m
      in subsequent scope
      
binding rules // Asbtract methods

  AbstractMethodDec(mod, _, t, m, p*, th):
  	defines Method m
      of type t
      of parameter-types pt*
      of throws th
      of modifiers mod
      where p* has type pt*
    scopes Variable

  DeprAbstractMethodDec(mod, _, t, m, p*, _, th):
    defines Method m
      of type t
      of parameter-types pt*
      of throws th
      of modifiers mod
      where p* has type pt*
    scopes Variable
